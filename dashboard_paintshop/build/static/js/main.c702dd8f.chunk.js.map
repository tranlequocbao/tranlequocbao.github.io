{"version":3,"sources":["components/chart.jsx","App.jsx","index.jsx"],"names":["Chart","props","targetRef","useRef","data","values","type","_useState","useState","_useState2","Object","slicedToArray","labels","setLabels","useLayoutEffect","current","offsetWidth","console","log","config","color","xField","xAxis","label","style","fontWeight","fontSize","yAxis","tickInterval","max","grid","yField","seriesField","legend","position","itemName","height","width","options","aspecRatio","lineStyle","lineWidth","point","size","shape","fill","stroke","tooltip","showMarkers","state","active","shadowBlur","interactions","layout","formatter","_ref","value","textAlign","annotations","start","end","lineDash","content","offsetY","offsetX","textBaseline","react_default","a","createElement","ref","line","assign","padding","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","dataWBS","setDataWBS","_useState3","_useState4","dataPBS","setDataPBS","_useState5","_useState6","objectSocket","setObjectSocket","socketRef","React","_useState7","inWBS","outWBS","amountWBS","emptyWBS","inPTED","amountPTED","bufferEDOVEN","EmptyBufferEDOVEN","passPVC","recoat","amountPaint","inPBS","outPBS","backLuxury","amountPBS","totalRecoat","CarError","CarGood","_useState8","showAmount","setShowAmount","numDays","parseInt","Date","getFullYear","getMonth","getDate","useEffect","getObjectSocket","getData","sockettIOClient","connect","on","connected","emit","map","dataGot","objectSpread","asyncToGenerator","_callee2","_context3","year","category","axios","post","_ref2","_callee","res","rawData","_loop","_context2","valueWBS","valuePBS","_context","getvalue","concat","toConsumableArray","amount","index","timeStamp","substring","_x","apply","arguments","_ref3","_callee3","array","_context4","_x2","_x3","_x4","className","row","col","card","title","bordered","backgroundColor","emptyBufferEDOVEN","toLuxury","margin","chart","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.c702dd8f.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\nimport { Line, G2 } from \"@ant-design/plots\";\nimport { each, findIndex } from \"@antv/util\";\n\nfunction Chart(props) {\n  //get width of window\n  const targetRef = useRef();\n\n  const data = props.values;\n  // console.log(data)\n  const type = props.type;\n  // const { InteractionAction, registerInteraction, registerAction } = G2;\n  const [labels, setLabels] = useState(15);\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      if (targetRef.current.offsetWidth > 945) {\n        setLabels(20);\n      }\n      if (targetRef.current.offsetWidth > 1265) {\n        setLabels(30);\n      }\n      console.log(targetRef.current.offsetWidth);\n    }\n  }, [labels]);\n  // labels && console.log(labels)\n  const config = {\n    data,\n    color: [\"#000099\", \"#66ff33\", \"#ff0000\"],\n    xField: \"year\",\n    xAxis: {\n      label: {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: labels,\n        },\n      },\n    },\n    yAxis: {\n      label: {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: labels,\n        },\n        // formatter: (v) =>v=parseInt(v)+5,\n      },\n\n      tickInterval: 30,\n      max: type == \"wbs\" ? 250 : 400,\n      grid: null,\n    },\n    yField: \"value\",\n    seriesField: \"category\",\n    legend: {\n      position: \"bottom\",\n      itemName: {\n        style: {\n          fontSize: labels - 2,\n        },\n      },\n    },\n    height: null,\n    width: null,\n    options: {\n      aspecRatio: 1,\n    },\n    lineStyle: {\n      lineWidth: labels == 40 ? 15 : 5,\n    },\n    point: {\n      size: 5,\n      shape: \"custom-point\",\n      style: {\n        fill: \"white\",\n        stroke: \"#5B8FF9\",\n        lineWidth: 2,\n      },\n    },\n    tooltip: {\n      showMarkers: true,\n      style: {\n        color: \"green\",\n      },\n    },\n    state: {\n      active: {\n        style: {\n          shadowBlur: 4,\n          stroke: \"#000\",\n          fill: \"red\",\n        },\n      },\n    },\n    interactions: [\n      {\n        type: \"custom-marker-interaction\",\n      },\n    ],\n    label: {\n      layout: [\n        {\n          type: \"hide-overlap\",\n        },\n      ],\n      formatter: ({ value }) => (value == 0 ? \"\" : value),\n      //\n      style: {\n        textAlign: \"left\",\n        fontSize: labels,\n        fontWeight: \"bolder\",\n      },\n    },\n    annotations: [\n      {\n        type: \"region\",\n        start: [\"min\", type == \"wbs\" ? 50 : 100],\n        end: [\"max\", \"0\"],\n        color: \"#fff000\",\n        style: {\n          fill: \"l(0) 0:#05fc57 1:#05fc57\",\n        },\n      },\n      {\n        type: \"line\",\n        start: [\"min\", type == \"wbs\" ? 50 : 100],\n        end: [\"max\", type == \"wbs\" ? 50 : 100],\n        style: {\n          stroke: \"#00FF00\",\n          lineDash: [3, 3],\n          lineWidth: 6,\n        },\n      },\n\n      {\n        type: \"line\",\n        start: [\"min\", type == \"wbs\" ? 150 : 250],\n        end: [\"max\", type == \"wbs\" ? 150 : 250],\n        style: {\n          stroke: \"#F4664A\",\n          lineDash: [3, 3],\n          lineWidth: 6,\n        },\n      },\n      {\n        type: \"region\",\n        start: [\"min\", type == \"wbs\" ? 150 : 250],\n        end: [\"max\", \"max\"],\n        //color: '#fff000',\n        style: {\n          fill: \"l(0) 0:#fc0505 1:#eb071e\",\n        },\n      },\n      {\n        type: \"text\",\n        position: [\"min\", type == \"wbs\" ? 50 : 100],\n        content: type == \"wbs\" ? \"50\" : \"100\",\n        offsetY: -10,\n        offsetX: 4,\n        style: {\n          textBaseline: \"bottom\",\n          fontSize: labels - 2,\n        },\n      },\n      {\n        type: \"text\",\n        position: [\"min\", type == \"wbs\" ? 150 : 250],\n        content: type == \"wbs\" ? \"150\" : \"250\",\n        offsetY: -20,\n        offsetX: 4,\n        style: {\n          textBaseline: \"top\",\n          fontSize: labels - 2,\n        },\n      },\n    ],\n  };\n  return (\n    <div ref={targetRef}>\n      <Line\n        {...config}\n        style={{\n          width: \"100%\",\n          padding: 10,\n          height:'55vh',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Chart;\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card } from \"antd\";\nimport \"antd/dist/reset.css\";\nimport Chart from \"./components/chart.jsx\";\nimport axios from \"axios\";\nimport sockettIOClient from \"socket.io-client\";\n\nfunction App() {\n      const [dataWBS, setDataWBS] = useState([]);\n      const [dataPBS, setDataPBS] = useState([]);\n      const [objectSocket, setObjectSocket] = useState([]);\n      const host = \"http://113.174.246.52:7798\";\n      const socketRef = React.useRef();\n      const [showAmount, setShowAmount] = useState({\n            inWBS: 0,\n            outWBS: 0,\n            amountWBS: 0,\n            emptyWBS: 0,\n            inPTED: 0,\n            amountPTED: 0,\n            bufferEDOVEN: 0,\n            EmptyBufferEDOVEN: 0,\n            passPVC: 0,\n            recoat: 0,\n            amountPaint: 0,\n            inPBS: 0,\n            outPBS: 0,\n            backLuxury: 0,\n            amountPBS: 0,\n            totalRecoat: 0,\n            CarError:0,\n            CarGood:0\n      });\n      const numDays = parseInt(\n            new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate()\n      );\n\n      useEffect(() => {\n            getObjectSocket();\n            //connect socket\n            getData();\n      }, []);\n\n      useEffect(() => {\n            socketRef.current = sockettIOClient.connect(host);\n            // socketRef.current.on(\"connect\", () => {});\n            socketRef.current.on(\"connect\", () => {\n                  console.log(\"connect\", socketRef.current.connected);\n                  // automatically join the room\n                  socketRef.current.emit(\"joined\");\n                  getData();\n            });\n            objectSocket.map((val) => {\n                  socketRef.current.on(val.name, (dataGot) => {\n                        if (val.name == \"amountWBS\" || val.name == \"amountPBS\") getData();\n                        setShowAmount((showAmount) => ({\n                              ...showAmount,\n                              [val.name]: dataGot,\n                        }));\n                  });\n            });\n      }, [objectSocket]);\n      const getData = async () => {\n            setDataWBS([\n                  {\n                        year: 0,\n                        value: 0,\n                        category: \"Số lượng BODY\",\n                  },\n            ]);\n            setDataPBS([\n                  {\n                        year: 0,\n                        value: 0,\n                        category: \"Số lượng BODY\",\n                  },\n            ]);\n\n            axios\n                  .post(\"http://113.174.246.52:7798/api/returnDataChart\")\n                  .then(async (res) => {\n                        var rawData = res.data;\n                        var dataRaw;\n                        dataRaw = res.data;\n\n                        // console.log(res.data);\n                        for (let i = 1; i <= numDays; i++) {\n                              let valueWBS = await getvalue(rawData, i, \"amountWBS\");\n\n                              setDataWBS((dataWBS) => [\n                                    ...dataWBS,\n                                    {\n                                          year: i,\n                                          value: valueWBS.length == 0 ? 0 : valueWBS.amount,\n                                          category: \"Số lượng BODY\",\n                                    },\n                              ]);\n\n                              let valuePBS = await getvalue(rawData, i, \"amountPBS\");\n                              setDataPBS((dataPBS) => [\n                                    ...dataPBS,\n                                    {\n                                          year: i,\n                                          value: valuePBS.length == 0 ? 0 : valuePBS.amount,\n                                          category: \"Số lượng BODY\",\n                                    },\n                              ]);\n                              // if (valueWBS.length != 0) {\n                              //   console.log(valueWBS);\n                              //     console.log(i);\n                              //   dataR = {\n                              //     year: i,\n                              //     value: valueWBS[0].amount,\n                              //     category: \"Số lượng BODY\",\n                              //   };\n                              //   setDataWBS((dataWBS) => [...dataWBS, dataR]);\n                              // } else {\n                              //   dataR = {\n                              //     year: i,\n                              //     value: 0,\n                              //     category: \"Số lượng BODY\",\n                              //   };\n                              //   setDataWBS((dataWBS) => [...dataWBS, dataR]);\n                              // }\n\n                              // if (valuePBS.length != 0) {\n                              //   dataR = {\n                              //     year: i,\n                              //     value: valuePBS[0].amount,\n                              //     category: \"Số lượng BODY\",\n                              //   };\n                              //   setDataPBS((dataPBS) => [...dataPBS, dataR]);\n                              // } else {\n                              //   dataR = {\n                              //     year: i,\n                              //     value: 0,\n                              //     category: \"Số lượng BODY\",\n                              //   };\n                              //   setDataPBS((dataPBS) => [...dataPBS, dataR]);\n                              // }\n                        }\n                        Object.keys(rawData).map((val, index) => {\n                              if (rawData[val].timeStamp.substring(0, 2) == new Date().getDate()) {\n                                    setShowAmount((showAmount) => ({\n                                          ...showAmount,\n                                          [rawData[val].name]: rawData[val].amount,\n                                    }));\n                              }\n                        });\n                  });\n      };\n      // dataWBS&&console.log(dataWBS)\n      const getvalue = async (array, i, position) => {\n            var value = [];\n            Object.keys(array).map((val) => {\n                  if (\n                        parseInt(array[val].timeStamp.substring(0, 2)) === i &&\n                        array[val].name == position\n                  ) {\n                        value = array[val];\n                        return;\n                  }\n            });\n\n            return value;\n      };\n      const getObjectSocket = () => {\n            axios.post(\"http://113.174.246.52:7798/api/returnObjectSocket\").then((res) => {\n                  setObjectSocket(res.data);\n            });\n      };\n      return (\n            <div className=\"App\">\n                  <Row className=\"row\">\n                        <Col className=\"column\" style={{ padding: 5 }}>\n                              <Col className=\"Red\">\n                                    <div className=\"cards\">\n                                          <div className=\"site-card-border-less-wrapper card\">\n                                                <Card\n                                                      title=\"CHUYỀN WBS\"\n                                                      bordered={true}\n                                                      style={{\n                                                            backgroundColor: \"#f0e68c\",\n\n                                                      }}\n                                                      className=\"detailCard\"\n                                                >\n                                                      <p>\n                                                            Tổng Body vào chuyền WBS:\n                                                            <span className=\"result\"> {showAmount.inWBS}</span>{\" \"}\n                                                      </p>\n                                                      <p>\n                                                            Tổng Body ra chuyền WBS:{\" \"}\n                                                            <span className=\"result\"> {showAmount.outWBS}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng Body trên chuyền WBS:{\" \"}\n                                                            <span className=\"result\"> {showAmount.amountWBS}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng vị trí trống trên chuyền WBS:\n                                                            <span className=\"result\"> {showAmount.emptyWBS}</span>\n                                                      </p>\n                                                </Card>\n                                          </div>\n                                          <div className=\"site-card-border-less-wrapper card\">\n                                                <Card\n                                                      title=\"CHUYỀN PT/ED\"\n                                                      bordered={true}\n                                                      style={{\n                                                            backgroundColor: \"#f0e68c\",\n                                                      }}\n                                                      className=\"detailCard\"\n                                                >\n                                                      <p>\n                                                            Tổng Body vào chuyền PT/ED:\n                                                            <span className=\"result\"> {showAmount.inPTED}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng Body trong chuyền PT/ED:\n                                                            <span className=\"result\"> {showAmount.amountPTED}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng Body Buffer ED Oven:\n                                                            <span className=\"result\"> {showAmount.bufferEDOVEN}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng Buffer trống ED Oven:\n                                                            <span className=\"result\">\n                                                                  {showAmount.emptyBufferEDOVEN}\n                                                            </span>\n                                                      </p>\n                                                </Card>\n                                          </div>\n                                          <div className=\"site-card-border-less-wrapper card\">\n                                                <Card\n                                                      title=\"CHUYỀN PVC & SƠN MÀU\"\n                                                      bordered={true}\n                                                      className=\"detailCard\"\n                                                      style={{\n                                                            backgroundColor: \"#f0e68c\",\n                                                      }}\n                                                >\n                                                      <p>\n                                                            Tổng Body qua chuyền PVC:{\" \"}\n                                                            <span className=\"result\"> {showAmount.passPVC} </span>\n                                                      </p>\n                                                      {/* <p>\n                                                            Tổng xe sơn lại trong Ngày:\n                                                            <span className=\"result\"> {showAmount.recoat}</span>\n                                                      </p> */}\n                                                      <p>\n                                                            Tổng xe sơn lại trong Tháng:\n                                                            <span className=\"result\"> {showAmount.totalRecoat}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng xe tại chuyền sơn màu:{\" \"}\n                                                            <span className=\"result\"> {showAmount.amountPaint}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng xe lỗi:{\" \"}\n                                                            <span className=\"result\"> {showAmount.CarError}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng xe không lỗi:{\" \"}\n                                                            <span className=\"result\"> {showAmount.CarGood}</span>\n                                                      </p>\n                                                </Card>\n                                          </div>\n                                          <div className=\"site-card-border-less-wrapper card\">\n                                                <Card\n                                                      title=\"CHUYỀN PBS\"\n                                                      bordered={true}\n                                                      className=\"detailCard\"\n                                                      style={{\n                                                            backgroundColor: \"#f0e68c\",\n                                                            width: \"100%\",\n                                                      }}\n                                                >\n                                                      <p>\n                                                            Tổng Body vào line PBS:\n                                                            <span className=\"result\"> {showAmount.inPBS}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng Body ra line PBS:\n                                                            <span className=\"result\"> {showAmount.outPBS}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng Body màu cấp về Luxury:\n                                                            <span className=\"result\"> {showAmount.toLuxury}</span>\n                                                      </p>\n                                                      <p>\n                                                            Tổng Body trên chuyền PBS:{\" \"}\n                                                            <span className=\"result\"> {showAmount.amountPBS}</span>\n                                                      </p>\n                                                </Card>\n                                          </div>\n                                    </div>\n                              </Col>\n                        </Col>\n                  </Row>\n                  <Row className=\"row1\">\n                        <Col className=\"column\" style={{ padding: 5 }}>\n                              <Col className=\"Green\">\n                                    <Row\n                                          className=\"aaa\"\n                                          style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n                                    >\n                                          <Col\n                                                style={{\n                                                      height: \"100%\",\n                                                      width: \"50%\",\n                                                      padding: 5,\n                                                      margin: \"auto\",\n                                                      position: \"relative\",\n                                                }}\n                                          >\n                                                <div className=\"titleChart\">\n                                                      <h3 className=\"nameTittle\">SỐ LƯỢNG BODY CHUYỀN WBS</h3>\n                                                </div>\n                                                <Chart values={dataWBS} type={\"wbs\"} />\n                                          </Col>\n\n                                          <Col\n                                                style={{\n                                                      height: \"100%\",\n                                                      width: \"50%\",\n                                                      padding: 5,\n                                                      margin: \"auto\",\n                                                      position: \"relative\",\n                                                }}\n                                          >\n                                                <div className=\"titleChart\">\n                                                      <h3 className=\"nameTittle\">SỐ LƯỢNG BODY CHUYỀN PBS</h3>\n                                                </div>\n                                                <Chart values={dataPBS} type={\"pbs\"} />\n                                          </Col>\n                                    </Row>\n                              </Col>\n                        </Col>\n                  </Row>\n            </div>\n      );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n    <App />\n \n);\n\n"],"sourceRoot":""}