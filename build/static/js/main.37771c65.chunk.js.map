{"version":3,"sources":["components/chart.jsx","App.jsx","components/ChartDPU.jsx","components/InformationProduct.jsx","components/TimeDown.jsx","components/ChartFTT.jsx","components/Dashboard.jsx","index.jsx"],"names":["Chart","App","ChartDPU","props","_useState","useState","_useState2","Object","slicedToArray","chartData","setChartData","_useState3","_useState4","colorData","setColorData","_useState5","_useState6","colorDataRatio","setColorDataRatio","useEffect","value","dataDPU","length","getDataDPU","dataTarget","targetDPU","getDataColor","getDataColorRatio","COLOR_COLOR","25D1","46V","42M","41W","47S","46G","47C","M6MY","KWE","ELG","KTV","EVL","EDZ","KCM","KLS","EEG","data","mazda","target","numDays","Date","getDate","_loop","i","dataMazda","filter","val","TYPE","PASS_DATETIME","amount","parseInt","reduce","total","nexval","error_type_count","toFixed","push","date","concat","type","dataPeugeot","colorLib","toConsumableArray","Set","COLOR","map","trim","amountColor","ind","name","amountErrorDirt","_loop2","result","nextval","configColor","appendPadding","angleField","colorField","radius","innerRadius","label","offset","content","style","textAlign","fontSize","fontWeight","layout","color","interactions","legend","itemName","fill","statistic","title","position","whiteSpace","overflow","textOverflow","configChartMain","xField","yField","seriesField","yAxis","formatter","v","replace","s","point","size","shape","_ref","_ref2","r","Number","item","configColorRatio","isStack","xAxis","text","react_default","a","createElement","className","line","assign","pie","column","InformationProduct","setDataTarget","dataLineProduct","setDataLineProduct","amountPBS","setAmountPBS","getAmountPBS","axios","post","then","res","console","log","returnValue","undefined","find","PROCESS_NO","COUNT","configPTED","percent","targetPTED","outline","border","distance","stroke","strokeOpacity","theme","styleSheet","brandColor","wave","configPVC","targetPVC","configPAINT","targetPAINT","configPBS","targetPBS","BookmarkBorder_default","marginRight","liquid","Math","round","VideoStable_default","Opacity_default","_ref3","DoneAll_default","_ref4","TimeDown","setData","getData","dataTimeDown","station","timeDownQC1K1","timeDownQC1K2","configdata","dataDraw","substring","timeStamp","config","isGroup","columnStyle","ChartFTT","_config","objectSocket","setObjectSocket","socketRef","useRef","host","getObjectSocket","socket","current","socketIoClient","connect","on","array","straightaway","toRepair","isPercent","defineProperty","Dashboard_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Dashboard","setDataDPU","setDataTimeDown","_useState7","_useState8","React","_useState9","_useState10","openDraw","setOpenDraw","_Form$useForm","Form","useForm","form","_notification$useNoti","notification","useNotification","_notification$useNoti2","api","contextHolder","formRef","_useState11","_useState12","socketFTT","setSocketFTT","_useState13","pted","pvc","paint","pbs","_useState14","openNotificationWithIcon","message","description","duration","getDataDPUFTT","getDataTimDown","sockettIOClient","connected","dataGot","getDataTargetProduction","objectValue","setFieldsValue","asyncToGenerator","_callee","getTimeNow","_context","newArray","acc","curr","found","toJSON","apply","arguments","_callee2","time","response1","response2","listCarError","vinCodes","_iterator","_step","_context2","_createForOfIteratorHelper","includes","VIN_CODE","errorItem","error_code","error_type","n","e","f","t0","_callee3","_context3","_callee4","_context4","components_InformationProduct","components_ChartDPU","components_TimeDown","components_ChartFTT","float_button","icon","SettingOutlined","bottom","right","onClick","drawer","placement","onClose","open","width","es_button","htmlFor","submit","divider","orientation","es_form","ref","id","labelCol","span","wrapperCol","maxWidth","initialValues","remember","onFinish","emit","onFinishFailed","errorInfo","autoComplete","Item","defaultValue","rules","required","input_number","ReactDOM","createRoot","document","getElementById","render","components_Dashboard"],"mappings":"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","file":"static/js/main.37771c65.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { Line} from \"@ant-design/plots\";\r\n\r\nfunction Chart(props) {\r\n    //get width of window\r\n    const targetRef = useRef();\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n          setData(props.values);\r\n    }, [props.values]);\r\n    // console.log(data)\r\n    const type = props.type;\r\n    // const { InteractionAction, registerInteraction, registerAction } = G2;\r\n    const [labels, setLabels] = useState(15);\r\n    useLayoutEffect(() => {\r\n        if (targetRef.current) {\r\n            if (targetRef.current.offsetWidth > 945) {\r\n                setLabels(20);\r\n            }\r\n            if (targetRef.current.offsetWidth > 1265) {\r\n                setLabels(30);\r\n            }\r\n            console.log(targetRef.current.offsetWidth);\r\n        }\r\n    }, [labels]);\r\n    // labels && console.log(labels)\r\n    const config = {\r\n        data,\r\n        color: [\"#000099\", \"#66ff33\", \"#ff0000\"],\r\n        xField: \"year\",\r\n        xAxis: {\r\n            label: {\r\n                style: {\r\n                    fontWeight: \"bold\",\r\n                    fontSize: labels,\r\n                },\r\n            },\r\n        },\r\n        yAxis: {\r\n            label: {\r\n                style: {\r\n                    fontWeight: \"bold\",\r\n                    fontSize: labels,\r\n                },\r\n                // formatter: (v) =>v=parseInt(v)+5,\r\n            },\r\n\r\n            tickInterval: 30,\r\n            max: type === \"wbs\" ? 250 : 400,\r\n            grid: null,\r\n        },\r\n        yField: \"value\",\r\n        seriesField: \"category\",\r\n        legend: {\r\n            position: \"bottom\",\r\n            itemName: {\r\n                style: {\r\n                    fontSize: labels - 2,\r\n                },\r\n            },\r\n        },\r\n        height: null,\r\n        width: null,\r\n        options: {\r\n            aspecRatio: 1,\r\n        },\r\n        lineStyle: {\r\n            lineWidth: labels ===40 ? 15 : 5,\r\n        },\r\n        point: {\r\n            size: 5,\r\n            shape: \"custom-point\",\r\n            style: {\r\n                fill: \"white\",\r\n                stroke: \"#5B8FF9\",\r\n                lineWidth: 2,\r\n            },\r\n        },\r\n        tooltip: {\r\n            showMarkers: true,\r\n            style: {\r\n                color: \"green\",\r\n            },\r\n        },\r\n        state: {\r\n            active: {\r\n                style: {\r\n                    shadowBlur: 4,\r\n                    stroke: \"#000\",\r\n                    fill: \"red\",\r\n                },\r\n            },\r\n        },\r\n        interactions: [\r\n            {\r\n                type: \"custom-marker-interaction\",\r\n            },\r\n        ],\r\n        label: {\r\n            layout: [\r\n                {\r\n                    type: \"hide-overlap\",\r\n                },\r\n            ],\r\n            formatter: ({ value }) => (value ===0 ? \"\" : value),\r\n            //\r\n            style: {\r\n                textAlign: \"left\",\r\n                fontSize: labels,\r\n                fontWeight: \"bolder\",\r\n            },\r\n        },\r\n        annotations: [\r\n            {\r\n                type: \"region\",\r\n                start: [\"min\", type === \"wbs\" ? 50 : 100],\r\n                end: [\"max\", \"0\"],\r\n                color: \"#fff000\",\r\n                style: {\r\n                    fill: \"l(0) 0:#05fc57 1:#05fc57\",\r\n                },\r\n            },\r\n            {\r\n                type: \"line\",\r\n                start: [\"min\", type === \"wbs\" ? 50 : 100],\r\n                end: [\"max\", type === \"wbs\" ? 50 : 100],\r\n                style: {\r\n                    stroke: \"#00FF00\",\r\n                    lineDash: [1, 1],\r\n                    lineWidth: 1,\r\n                },\r\n            },\r\n\r\n            {\r\n                type: \"line\",\r\n                start: [\"min\", type === \"wbs\" ? 150 : 250],\r\n                end: [\"max\", type === \"wbs\" ? 150 : 250],\r\n                style: {\r\n                    stroke: \"#F4664A\",\r\n                    lineDash: [1, 1],\r\n                    lineWidth: 1,\r\n                },\r\n            },\r\n            {\r\n                type: \"region\",\r\n                start: [\"min\", type === \"wbs\" ? 150 : 250],\r\n                end: [\"max\", \"max\"],\r\n                //color: '#fff000',\r\n                style: {\r\n                    fill: \"l(0) 0:#fc0505 1:#eb071e\",\r\n                },\r\n            },\r\n            {\r\n                type: \"text\",\r\n                position: [\"min\", type === \"wbs\" ? 50 : 100],\r\n                content: type === \"wbs\" ? \"50\" : \"100\",\r\n                offsetY: -10,\r\n                offsetX: 4,\r\n                style: {\r\n                    textBaseline: \"bottom\",\r\n                    fontSize: labels - 2,\r\n                },\r\n            },\r\n            {\r\n                type: \"text\",\r\n                position: [\"min\", type === \"wbs\" ? 150 : 250],\r\n                content: type === \"wbs\" ? \"150\" : \"250\",\r\n                offsetY: -20,\r\n                offsetX: 4,\r\n                style: {\r\n                    textBaseline: \"top\",\r\n                    fontSize: labels - 2,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    return (\r\n        <div ref={targetRef}>\r\n            <Line\r\n                {...config}\r\n                style={{\r\n                    width: \"100%\",\r\n                    // padding: 10,\r\n                    height: 'calc(55vh - 20px)',\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport \"antd/dist/reset.css\";\r\nimport Chart from \"./components/chart.jsx\";\r\nimport axios from \"axios\";\r\nimport sockettIOClient from \"socket.io-client\";\r\nimport ChartColumn from \"./components/ChartColumn.jsx\";\r\n\r\nfunction App() {\r\n\r\n      ///ẩn hiện các biểu đồ  --- trạng thái\r\n      const [change, setChange] = useState(false)\r\n      const [dataWBS, setDataWBS] = useState([]);\r\n      const [dataDPU, setDataDPU] = useState([]);\r\n      const [dataPBS, setDataPBS] = useState([]);\r\n      const [objectSocket, setObjectSocket] = useState([]);\r\n      const host = \"http://113.174.246.52:7798\";\r\n      const socketRef = React.useRef();\r\n      const [showAmount, setShowAmount] = useState({\r\n            inWBS: 0,\r\n            outWBS: 0,\r\n            amountWBS: 0,\r\n            emptyWBS: 0,\r\n            inPTED: 0,\r\n            amountPTED: 0,\r\n            bufferEDOVEN: 0,\r\n            EmptyBufferEDOVEN: 0,\r\n            passPVC: 0,\r\n            recoat: 0,\r\n            amountPaint: 0,\r\n            inPBS: 0,\r\n            outPBS: 0,\r\n            backLuxury: 0,\r\n            amountPBS: 0,\r\n            totalRecoat: 0,\r\n            CarError: 0,\r\n            CarGood: 0,\r\n      });\r\n      var  numDays = parseInt(\r\n            new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate()\r\n      )\r\nnumDays=parseInt(new Date().getDate())\r\nconsole.log(numDays)\r\n\r\n      ////useState cập nhật chiều rộng của cửa sổ     \r\n      //\r\n      //const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n      ///// kiểm tra thay đổi chiều rộng của cửa sổ\r\n      // useEffect(() => {\r\n      //       function handleResize() {\r\n      //             setWindowWidth(window.innerWidth);\r\n      //       }\r\n      //       window.addEventListener(\"resize\", handleResize);\r\n      //       return () => window.removeEventListener(\"resize\", handleResize);\r\n      // }, []);\r\n      // useEffect(() => {\r\n      //       getObjectSocket();\r\n      //       //connect socket\r\n      //       getData();\r\n      // }, []);\r\n\r\n      ////set ẩn hiện các biểu đồ\r\n\r\n      useEffect(() => {\r\n            // Chuyển đổi trạng thái hiển thị của các div sau 5 giây\r\n            const timer = setTimeout(() => {\r\n                  setChange((prev) => !prev);\r\n            }, 10000);\r\n\r\n            // Xóa bộ đếm khi component bị unmount hoặc trạng thái thay đổi\r\n            return () => clearTimeout(timer);\r\n      }, [change])\r\n\r\n      useEffect(() => {\r\n            socketRef.current = sockettIOClient.connect(host);\r\n            // socketRef.current.on(\"connect\", () => {});\r\n            socketRef.current.on(\"connect\", () => {\r\n                  console.log(\"connect\", socketRef.current.connected);\r\n                  // automatically join the room\r\n                  socketRef.current.emit(\"joined\");\r\n                  getData();\r\n            });\r\n            objectSocket.map((val) => {\r\n                  socketRef.current.on(val.name, (dataGot) => {\r\n                        if (val.name === \"amountWBS\" || val.name === \"amountPBS\") getData();\r\n                        setShowAmount((showAmount) => ({\r\n                              ...showAmount,\r\n                              [val.name]: dataGot,\r\n                        }));\r\n                  });\r\n            });\r\n      }, [objectSocket]);\r\n      // const countSumDataArray =async(array,coulumn)=>{\r\n      //     var result\r\n      //     for(let i = 0;i<array.length;i++){\r\n      //         array[i][column]\r\n      //     }\r\n      // }\r\n      const getData = async () => {\r\n            setDataWBS([]);\r\n            setDataPBS([]);\r\n            setDataDPU([]);\r\n        axios\r\n                  .post(\"http://113.174.246.52:7798/api/returnDataChart\")\r\n                  .then(async (res) => {\r\n                        var rawData = res.data;\r\n                        for (let i = 1; i <= numDays; i++) {\r\n                              let valueWBS = await getvalue(rawData, i, \"amountWBS\");\r\n\r\n                              setDataWBS((dataWBS) => [\r\n                                    ...dataWBS,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valueWBS.length === 0 ? 0 : valueWBS.amount,\r\n                                          category: \"Số lượng BODY\",\r\n                                    },\r\n                              ]);\r\n                              let valuePBS = await getvalue(rawData, i, \"amountPBS\");\r\n                              setDataPBS((dataPBS) => [\r\n                                    ...dataPBS,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valuePBS.length === 0 ? 0 : valuePBS.amount,\r\n                                          category: \"Số lượng BODY\",\r\n                                    },\r\n                              ]);\r\n\r\n                              let valueError = await getvalue(rawData, i, \"CarError\");\r\n                              setDataDPU((dataDPU) => [\r\n                                    ...dataDPU,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valueError.length === 0 ? 0 : valueError.amount,\r\n                                          type: \"Số lượng BODY lỗi\",\r\n                                    },\r\n                              ]);\r\n                              let valueGood = await getvalue(rawData, i, \"CarGood\");\r\n\r\n                              setDataDPU((dataDPU) => [\r\n                                    ...dataDPU,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valueGood.length === 0 ? 0 : valueGood.amount,\r\n                                          type: \"Số lượng BODY KHÔNG lỗi\",\r\n                                    },\r\n                              ]);\r\n                        }\r\n                        Object.keys(rawData).map((val, index) => {\r\n                              if (rawData[val].timeStamp.substring(0, 2) === new Date().getDate()) {\r\n                                    setShowAmount((showAmount) => ({\r\n                                          ...showAmount,\r\n                                          [rawData[val].name]: rawData[val].amount,\r\n                                    }));\r\n                              }\r\n                              return val\r\n                        });\r\n                  });\r\n      };\r\n      // dataWBS&&console.log(dataWBS)\r\n      const getvalue = async (array, i, position) => {\r\n            var value = [];\r\n            Object.keys(array).map((val) => {\r\n                  if (\r\n                        parseInt(array[val].timeStamp.substring(0, 2)) === i &&\r\n                        array[val].name === position\r\n                  ) {\r\n                        value = array[val];\r\n                     \r\n                  }\r\n                  return val\r\n            });\r\n\r\n            return value;\r\n      };\r\n      // const getObjectSocket = () => {\r\n      //       axios\r\n      //             .post(\"http://113.174.246.52:7798/api/returnObjectSocket\")\r\n      //             .then((res) => {\r\n      //                   setObjectSocket(res.data);\r\n      //             });\r\n      // };\r\n      return (\r\n            <div className=\"App\">\r\n                  <Row className=\"row\">\r\n                        <Col className=\"column\" style={{ padding: 5 }}>\r\n                              <Col className=\"Red\">\r\n                                    <div className=\"cards\">\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN WBS\"\r\n                                                      bordered={true}\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                      }}\r\n                                                      className=\"detailCard\"\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body vào chuyền WBS:\r\n                                                            <span className=\"result\"> {showAmount.inWBS}</span>{\" \"}\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body ra chuyền WBS:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.outWBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body trên chuyền WBS:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.amountWBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng vị trí trống trên chuyền WBS:\r\n                                                            <span className=\"result\"> {showAmount.emptyWBS}</span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN PT/ED\"\r\n                                                      bordered={true}\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                      }}\r\n                                                      className=\"detailCard\"\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body vào chuyền PT/ED:\r\n                                                            <span className=\"result\"> {showAmount.inPTED}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body trong chuyền PT/ED:\r\n                                                            <span className=\"result\"> {showAmount.amountPTED}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body Buffer ED Oven:\r\n                                                            <span className=\"result\"> {showAmount.bufferEDOVEN}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Buffer trống ED Oven:\r\n                                                            <span className=\"result\">\r\n                                                                  {showAmount.emptyBufferEDOVEN}\r\n                                                            </span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN PVC & SƠN MÀU\"\r\n                                                      bordered={true}\r\n                                                      className=\"detailCard\"\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                      }}\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body qua chuyền PVC:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.passPVC} </span>\r\n                                                      </p>\r\n                                                      {/* <p>\r\n                                                            Tổng xe sơn lại trong Ngày:\r\n                                                            <span className=\"result\"> {showAmount.recoat}</span>\r\n                                                      </p> */}\r\n                                                      <p>\r\n                                                            Tổng xe sơn lại trong Tháng:\r\n                                                            <span className=\"result\"> {showAmount.totalRecoat}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng xe tại chuyền sơn màu:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.amountPaint}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng xe lỗi:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.CarError}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng xe không lỗi:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.CarGood}</span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN PBS\"\r\n                                                      bordered={true}\r\n                                                      className=\"detailCard\"\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                            width: \"100%\",\r\n                                                      }}\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body vào line PBS:\r\n                                                            <span className=\"result\"> {showAmount.inPBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body ra line PBS:\r\n                                                            <span className=\"result\"> {showAmount.outPBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body màu cấp về Luxury:\r\n                                                            <span className=\"result\"> {showAmount.toLuxury}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body trên chuyền PBS:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.amountPBS}</span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                    </div>\r\n                              </Col>\r\n                        </Col>\r\n                  </Row>\r\n                  {\r\n                        change ? (<Row className=\"row1\" style={{ display: change === true ? 'inline-block' : 'none' }}>\r\n                              <Col className=\"column\" style={{ padding: 5 }}>\r\n                                    <Col className=\"Green\">\r\n                                          <Row\r\n                                          className=\"chartAntd\"\r\n                                                // style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\r\n                                          >\r\n                                                <Col\r\n                                                className=\"chart\"\r\n                                                      \r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">SỐ LƯỢNG BODY CHUYỀN WBS</h3>\r\n                                                      </div>\r\n                                                      <Chart values={dataWBS} type={\"wbs\"} />\r\n                                                </Col>\r\n\r\n                                                <Col\r\n                                                   className=\"chart\"\r\n                                                     \r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">SỐ LƯỢNG BODY CHUYỀN PBS</h3>\r\n                                                      </div>\r\n                                                      <Chart values={dataPBS} type={\"pbs\"} />\r\n                                                </Col>\r\n                                          </Row>\r\n                                    </Col>\r\n                              </Col>\r\n                        </Row>) : (<Row className=\"row2\" style={{ display: change === false ? 'inline-block' : 'none' }}>\r\n                              <Col className=\"column\" style={{ padding: 5 }}>\r\n                                    <Col className=\"Green\">\r\n                                          <Row\r\n                                                className=\"chartAntd\"\r\n                                                style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\r\n                                          >\r\n                                                <Col\r\n                                                      className=\"chartDPU\"\r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">BIỂU ĐỒ DPU-FTT</h3>\r\n                                                      </div>\r\n                                                      <ChartColumn value={dataDPU} />\r\n                                                </Col>\r\n\r\n                                                {/* <Col\r\n                                                      className=\"chart\"\r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">BIỂU ĐỒ FTT</h3>\r\n                                                      </div>\r\n                                                      <Chart values={dataPBS} type={\"pbs\"} />\r\n                                                </Col> */}\r\n                                          </Row>\r\n                                    </Col>\r\n                              </Col>\r\n                        </Row>\r\n                        )\r\n                  }\r\n\r\n\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/Dpu.css\";\r\nimport { Line, Pie, Column, G2 } from \"@ant-design/plots\";\r\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\r\nimport { red } from \"@mui/material/colors\";\r\nfunction ChartDPU(props) {\r\n  // console.log(props.value)\r\n  const [chartData, setChartData] = useState([]);\r\n  const [colorData, setColorData] = useState([]);\r\n  const [colorDataRatio, setColorDataRatio] = useState([]);\r\n  // const [dataChart,setDataChart]=useState([])\r\n  useEffect(() => {\r\n    if (props.value.dataDPU.length > 0) {\r\n      getDataDPU(props.value.dataDPU, props.value.dataTarget.targetDPU);\r\n      getDataColor(props.value.dataDPU);\r\n      getDataColorRatio(props.value.dataDPU);\r\n    }\r\n  }, [props.value]);\r\n\r\n  const COLOR_PLATE_10 = [\r\n    \"#5B8FF9\",\r\n    \"#5AD8A6\",\r\n    \"#5D7092\",\r\n    \"#F6BD16\",\r\n    \"#E8684A\",\r\n    \"#6DC8EC\",\r\n    \"#9270CA\",\r\n    \"#FF9D4D\",\r\n    \"#269A99\",\r\n    \"#FF99C3\",\r\n  ];\r\n\r\n  const COLOR_COLOR = {\r\n    \"25D1\": \"#f2faf4\",\r\n    \"46V\": \"#d60d0d\",\r\n    \"42M\": \"#151E2E\",\r\n    \"41W\": \"#0E0E0E\",\r\n    \"47S\": \"#979985\",\r\n    \"46G\": \"#6A6B6D\",\r\n    \"47C\": \"#4054db\",\r\n    M6MY: \"#900C12\",\r\n    KWE: \"#f2faf4\",\r\n    ELG: \"#7A381B\",\r\n    KTV: \"#060708\",\r\n    EVL: \"#272B2E\",\r\n    EDZ: \"#00497B\",\r\n    KCM: \"#A56549\",\r\n    KLS: \"#D16B00\",\r\n    EEG: \"#225F8F\",\r\n  };\r\n  const getDataDPU = (data, targetDPU) => {\r\n    let mazda = [];\r\n    let peugeot = [];\r\n    let target = [];\r\n    let numDays = new Date().getDate();\r\n    if (numDays < 15) numDays = 15;\r\n    for (let i = 1; i <= numDays; i++) {\r\n      let dataMazda = data.filter(\r\n        (val) =>\r\n          val.TYPE === \"MAZDA\" && new Date(val.PASS_DATETIME).getDate() === i\r\n      );\r\n      if (dataMazda.length > 0) {\r\n        let amount = parseInt(\r\n          (\r\n            dataMazda.reduce(\r\n              (total, nexval) => total + parseInt(nexval.error_type_count),\r\n              0\r\n            ) / dataMazda.length\r\n          ).toFixed(2)\r\n        );\r\n        mazda.push({\r\n          date: `${i}`,\r\n          type: \"MAZDA\",\r\n          amount: amount,\r\n        });\r\n      } else {\r\n        mazda.push({\r\n          date: `${i}`,\r\n          type: \"MAZDA\",\r\n          amount: 0,\r\n        });\r\n      }\r\n      let dataPeugeot = data.filter(\r\n        (val) =>\r\n          val.TYPE === \"PEUGEOT\" && new Date(val.PASS_DATETIME).getDate() === i\r\n      );\r\n      if (dataPeugeot.length > 0) {\r\n        let amount = parseInt(\r\n          (\r\n            dataPeugeot.reduce(\r\n              (total, nexval) => total + parseInt(nexval.error_type_count),\r\n              0\r\n            ) / dataPeugeot.length\r\n          ).toFixed(2)\r\n        );\r\n        mazda.push({\r\n          date: `${i}`,\r\n          type: \"PEUGEOT\",\r\n          amount: amount,\r\n        });\r\n      } else {\r\n        mazda.push({\r\n          date: `${i}`,\r\n          type: \"PEUGEOT\",\r\n          amount: 0,\r\n        });\r\n      }\r\n      target.push({\r\n        date: `${i}`,\r\n        type: \"TARGET\",\r\n        amount: targetDPU,\r\n      });\r\n    }\r\n    setChartData(mazda.concat(peugeot.concat(target)));\r\n  };\r\n  const getDataColor = (data) => {\r\n    const colorLib = [\r\n      ...new Set(\r\n        data.filter((val) => val.COLOR !== \"\").map((val) => val.COLOR.trim())\r\n      ),\r\n    ];\r\n    let colorData = [];\r\n    let amountColor = 0;\r\n    colorLib.map((val, ind) => {\r\n      amountColor = data.filter((value) => value.COLOR === val).length;\r\n      colorData.push({\r\n        name: val,\r\n        amount: amountColor,\r\n      });\r\n    });\r\n    setColorData(colorData);\r\n  };\r\n  const getDataColorRatio = (data) => {\r\n    const colorLib = [\r\n      ...new Set(\r\n        data.filter((val) => val.COLOR !== \"\").map((val) => val.COLOR.trim())\r\n      ),\r\n    ];\r\n    let colorData = [];\r\n    let amountColor = 0;\r\n    let amountErrorDirt = 0;\r\n    let numDays = new Date().getDate();\r\n    if (numDays < 15) numDays = 15;\r\n\r\n    for (let i = 1; i <= numDays; i++) {\r\n      colorLib.map((val, ind) => {\r\n        amountColor = data.filter(\r\n          (value) =>\r\n            value.COLOR === val && new Date(value.PASS_DATETIME).getDate() === i\r\n        ).length;\r\n        amountErrorDirt = data\r\n          .filter(\r\n            (value) =>\r\n              value.COLOR === val &&\r\n              new Date(value.PASS_DATETIME).getDate() === i\r\n          )\r\n          .reduce(\r\n            (total, nextval) => total + parseInt(nextval.error_type_count),\r\n            0\r\n          );\r\n        // console.log(amountColor)\r\n        //      console.log(amountErrorDirt)\r\n        let result = amountErrorDirt / amountColor;\r\n\r\n        colorData.push({\r\n          name: `${val}`,\r\n          amount: !result ? 0 : parseInt(amountErrorDirt / amountColor),\r\n          date: `${i}`,\r\n        });\r\n        return val;\r\n      });\r\n    }\r\n    setColorDataRatio(colorData);\r\n  };\r\n  const configColor = {\r\n    appendPadding: 10,\r\n    data: colorData,\r\n    angleField: \"amount\",\r\n    colorField: \"name\",\r\n    radius: 1,\r\n    innerRadius: 0.6,\r\n    label: {\r\n      type: \"inner\",\r\n      offset: \"-50%\",\r\n      content: \"{value}\",\r\n      style: {\r\n        textAlign: \"center\",\r\n        fontSize: 14,\r\n        fontWeight: \"bold\",\r\n      },\r\n      layout: [\r\n        {\r\n          type: \"adjust-color\",\r\n        },\r\n      ],\r\n    },\r\n    color: (val) => COLOR_COLOR[`${val.name}`],\r\n    interactions: [\r\n      {\r\n        type: \"element-selected\",\r\n      },\r\n      {\r\n        type: \"element-active\",\r\n      },\r\n    ],\r\n    legend: {\r\n      itemName: {\r\n        style: {\r\n          fontSize: 15,\r\n          fill: \"white\",\r\n        },\r\n      },\r\n    },\r\n    statistic: {\r\n      title: false,\r\n      position: \"center\",\r\n      content: {\r\n        style: {\r\n          whiteSpace: \"pre-wrap\",\r\n          overflow: \"hidden\",\r\n          textOverflow: \"ellipsis\",\r\n          fontSize: 15,\r\n          color: \"white\",\r\n        },\r\n        content: \"Amount\\nColor\",\r\n      },\r\n    },\r\n  };\r\n  ///config chart Line with dpu chart main\r\n  const configChartMain = {\r\n    data: chartData,\r\n    xField: \"date\",\r\n    yField: \"amount\",\r\n    seriesField: \"type\",\r\n    yAxis: {\r\n      label: {\r\n        formatter: (v) =>\r\n          `${v}`.replace(/\\d{1,3}(?=(\\d{3})+$)/g, (s) => `${s},`),\r\n      },\r\n    },\r\n    color: COLOR_PLATE_10,\r\n    point: {\r\n      size: 10,\r\n      shape: ({ type }) => {\r\n        return type === \"MAZDA\" ? \"square\" : \"circle\";\r\n      },\r\n      style: ({ date }) => {\r\n        return {\r\n          r: Number(date) % 4 ? 0 : 3,\r\n        };\r\n      },\r\n    },\r\n    label: {\r\n      layout: [\r\n        {\r\n          type: \"hide-overlap\",\r\n        },\r\n      ],\r\n\r\n      style: {\r\n        textAlign: \"left\",\r\n        fontSize: 15,\r\n      },\r\n      formatter: (item) => item.amount,\r\n    },\r\n    legend: {\r\n      itemName: {\r\n        style: {\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const configColorRatio = {\r\n    data: colorDataRatio,\r\n    isStack: true,\r\n    xField: \"date\",\r\n    yField: \"amount\",\r\n    seriesField: \"name\",\r\n\r\n    xAxis: {\r\n      title: {\r\n        text: \"DIRT RATE OF EACH COLOR\",\r\n        style: {\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n    label: {\r\n      formatter: (val) => (val.amount !== 0 ? val.amount : \"\"),\r\n\r\n      position: \"middle\",\r\n\r\n      layout: [\r\n        {\r\n          type: \"interval-adjust-position\",\r\n        },\r\n        {\r\n          type: \"interval-hide-overlap\",\r\n        },\r\n        {\r\n          type: \"adjust-color\",\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"child-board dpu\">\r\n      <div className=\"titleChartDPU\">DPU</div>\r\n      <div className=\"dpu-chart-main\">\r\n        <div className=\"titleDPUChart\">DPU CHART</div>\r\n        <Line {...configChartMain} className=\"chart-dpu\" />\r\n      </div>\r\n      <div className=\"dpu-chart-color\">\r\n        <div className=\"dpu-chart-mount-color\">\r\n          <Pie {...configColor} className=\"chart-color\"></Pie>\r\n        </div>\r\n        <div className=\"dpu-chart-ratio-color\">\r\n          {/* <div className='title-color-ratio'>COLOR RATIO</div> */}\r\n          <Column {...configColorRatio} className=\"chart-color-ratio\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ChartDPU;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Liquid } from '@ant-design/plots';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport VideoStableIcon from '@mui/icons-material/VideoStable';\r\nimport OpacityIcon from '@mui/icons-material/Opacity';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport axios from \"axios\";\r\n\r\nfunction InformationProduct(props) {\r\n\r\n      const [dataTarget, setDataTarget] = useState([])\r\n      const [dataLineProduct, setDataLineProduct] = useState([])\r\n    const [amountPBS,setAmountPBS]=useState(0)\r\n\r\n      useEffect(() => {\r\n            setDataLineProduct(props.value.dataLineProduct)\r\n            setDataTarget(props.value.dataTarget)\r\n          getAmountPBS()\r\n      }, [props.value])\r\n    const getAmountPBS=()=>{\r\naxios.post(\"http://113.174.246.52:7798/api/getAmountPBS\").then(res=>{\r\n    console.log(res.data)\r\n   setAmountPBS(res.data[0].amount)\r\n})\r\n    }\r\n\r\n      /// return value of each Line \r\n      const returnValue = (line) => {\r\n            let result = 0\r\n            if (dataLineProduct.length > 0) {\r\n                  let result = dataLineProduct.find(item => item.PROCESS_NO === line) !== undefined ? dataLineProduct.find(item => item.PROCESS_NO === line).COUNT : 0\r\n                  return result\r\n            }\r\n            else\r\n                  return result\r\n      }\r\n      ///// Cấu hình biểu đồ\r\n      const configPTED = {\r\n            percent: returnValue(20) / dataTarget.targetPTED,\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#76b583',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#76b583',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n      };\r\n      const configPVC = {\r\n            percent: returnValue(50) / dataTarget.targetPVC,\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#cdc77d',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#cdc77d',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n      };\r\n      const configPAINT = {\r\n            percent: returnValue(60) / dataTarget.targetPAINT,\r\n            //  shape: 'rect',\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#eb1e5d',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#eb1e5d',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n\r\n      };\r\n      const configPBS = {\r\n            percent: amountPBS / dataTarget.targetPBS,\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#FAAD14',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#FAAD14',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n\r\n      };\r\n      return (\r\n            <div className=\"child-board quantity\">\r\n                  <div className=\"titleBoard\">PRODUCTION INFORMATION BOARD</div>\r\n                  <div className=\"content\">\r\n                        <div className=\"col name pted\">\r\n                              <div className=\"title title-column\"><BookmarkBorderIcon style={{ marginRight: 10 }} /> PT/ED</div>\r\n                              <div className=\"data-product\">\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{` ${dataTarget.targetPTED}`} </p><p><pre>  </pre> </p><p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{` ${returnValue(20)}`}</p>\r\n                                          {/* {`TARGET: ${dataTarget.targetPTED}  -  ACTUAL: ${returnValue(20)}`} */}\r\n                                    </div>\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\" >\r\n                                    <Liquid\r\n                                          {...configPTED}\r\n                                          statistic={{\r\n                                                content: {\r\n                                                      formatter({ percent }) {\r\n                                                            return Math.round(percent * 100) + \"%\";\r\n                                                      },\r\n                                                },\r\n                                          }} />\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"col target pvc\">\r\n                              <div className=\"title title-column\"><VideoStableIcon style={{ marginRight: 10 }} />PVC</div>\r\n                              <div className=\"data-product\">\r\n\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{`${dataTarget.targetPVC}`} </p><p><pre>  </pre> </p><p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{`${returnValue(50)}`}</p>\r\n                                          {/* {`TARGET: ${dataTarget.targetPVC}  -  ACTUAL: ${returnValue(50)}`} */}\r\n                                    </div>\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\"  >\r\n                                    <Liquid\r\n                                          {...configPVC}\r\n                                          statistic={{\r\n                                                content: {\r\n                                                      formatter({ percent }) {\r\n                                                            return Math.round(percent * 100) + \"%\";\r\n                                                      },\r\n                                                },\r\n\r\n                                          }}\r\n                                    />\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"col actual paint\">\r\n                              <div className=\"title title-column\"><OpacityIcon style={{ marginRight: 10 }} />PAINT</div>\r\n                              <div className=\"data-product\">\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{`${dataTarget.targetPAINT}`}</p> <p><pre>  </pre> </p><p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{`${returnValue(60)}`}</p>\r\n                                          {/* {`TARGET: ${dataTarget.targetPAINT}  -  ACTUAL: ${returnValue(60)}`} */}\r\n                                    </div>\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\">\r\n                                    <Liquid {...configPAINT} statistic={{\r\n                                          content: {\r\n                                                formatter({ percent }) {\r\n                                                      return Math.round(percent * 100) + \"%\";\r\n                                                },\r\n                                          },\r\n                                    }} />\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"col actual pbs\">\r\n                              <div className=\"title title-column\"><DoneAllIcon style={{ marginRight: 10 }} />IN PBS</div>\r\n                              <div className=\"data-product\">\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{`${dataTarget.targetPBS}`} </p><p><pre>  </pre> </p> <p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{`${amountPBS}`}</p>\r\n\r\n                                    </div>\r\n                                    {/* {`TARGET: ${dataTarget.targetPBS}  -  ACTUAL: ${returnValue(90)}`} */}\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\">\r\n                                    <Liquid {...configPBS} statistic={{\r\n                                          content: {\r\n                                                formatter({ percent }) {\r\n                                                      return Math.round(percent * 100) + \"%\";\r\n                                                },\r\n                                          },\r\n                                    }} />\r\n                              </div>\r\n                        </div>\r\n                  </div>\r\n\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default InformationProduct\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Column } from \"@ant-design/plots\";\r\nimport \"../styles/TimeDown.css\";\r\nfunction TimeDown(props) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getData(props.value.dataTimeDown);\r\n  }, [props.value]);\r\n  const station = {\r\n    timeDownQC1K1: \"Time Down QC1K 1\",\r\n    timeDownQC1K2: \"Time Down QC1K 2\",\r\n  };\r\n  const getData = (data) => {\r\n    let configdata = [];\r\n    // let numDays = new Date(new Date().getDate(), new Date().getMonth() + 1, 0).getDate()\r\n    let numDays = new Date().getDate();\r\n    if (numDays < 15) numDays = 15;\r\n\r\n    for (let i = 1; i <= numDays; i++) {\r\n      let dataDraw = data.filter(\r\n        (val) =>\r\n          val.name.substring(0, 8) === \"timeDown\" &&\r\n          new Date(val.timeStamp).getDate() === i\r\n      );\r\n      if (dataDraw.length > 0) {\r\n        dataDraw.map((value) => {\r\n          configdata.push({\r\n            name: station[value.name],\r\n            amount: parseInt((value.amount / 60).toFixed(0)),\r\n            timeStamp: `${i}`,\r\n          });\r\n        });\r\n      } else {\r\n        configdata.push(\r\n          {\r\n            name: \"Time Down QC1K 1\",\r\n            amount: 0,\r\n            timeStamp: `${i}`,\r\n          },\r\n          {\r\n            name: \"Time Down QC1K 2\",\r\n            amount: 0,\r\n            timeStamp: `${i}`,\r\n          }\r\n        );\r\n      }\r\n    }\r\n    setData(configdata);\r\n  };\r\n  const config = {\r\n    data,\r\n    xField: \"timeStamp\",\r\n    yField: \"amount\",\r\n    seriesField: \"name\",\r\n    isGroup: true,\r\n    columnStyle: {\r\n      radius: [20, 20, 0, 0],\r\n    },\r\n\r\n    xAxis: {\r\n      title: {\r\n        text: \"DAY (IN CURRENT MONTH)\",\r\n        style: {\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: \"Minute\",\r\n        style: {\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n    label: {\r\n      formatter: (val) => (val.amount !== 0 ? val.amount : \"\"),\r\n      style: {\r\n        fontSize: 16,\r\n      },\r\n      offset: \"-50%\",\r\n\r\n      position: \"top\",\r\n      layout: [\r\n        {\r\n          type: \"interval-adjust-position\",\r\n        },\r\n        {\r\n          // type: 'interval-hide-overlap',\r\n        },\r\n        {\r\n          type: \"adjust-color\",\r\n        },\r\n      ],\r\n    },\r\n    legend: {\r\n      itemName: {\r\n        style: {\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"child-board timeDown\">\r\n      <div className=\"title-timedown\">TIME DOWN</div>\r\n      <div className=\"dpu-timedown\">\r\n        <Column {...config} className=\"chartTimeDown\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeDown;\r\n\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../styles/ChartFTT.css\";\r\nimport { Column } from \"@ant-design/plots\";\r\nimport socketIoClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nfunction ChartFTT(props) {\r\n  const [data, setData] = useState([]);\r\n  const [objectSocket, setObjectSocket] = useState([]);\r\n  const socketRef = useRef();\r\n  const host = \"http://113.174.246.52:7798\";\r\n  useEffect(() => {\r\n    getObjectSocket();\r\n    getData();\r\n    console.log(props.socket);\r\n  }, [props.socket]);\r\n  useEffect(() => {\r\n    socketRef.current = socketIoClient.connect(host);\r\n    objectSocket.map((val) => {\r\n      socketRef.current.on(val.name, () => {\r\n        if (val.name === \"straightaway\" || val.name === \"toRepair\") {\r\n          getData();\r\n        }\r\n      });\r\n    });\r\n  }, [objectSocket]);\r\n  const getData = () => {\r\n    axios.post(`${host}/api/getFTT`).then((res) => {\r\n      let array = res.data;\r\n\r\n      let numDays = new Date().getDate();\r\n      if (numDays < 15) numDays = 15;\r\n      for (let i = 1; i <= numDays; i++) {\r\n        let straightaway = array.filter(\r\n          (val) =>\r\n            val.name === \"straightaway\" &&\r\n            new Date(val.timeStamp).getDate() === i\r\n        );\r\n\r\n        let toRepair = array.filter(\r\n          (val) =>\r\n            val.name === \"toRepair\" && new Date(val.timeStamp).getDate() === i\r\n        );\r\n\r\n        data.push(\r\n          {\r\n            name: \"Body OK\",\r\n            amount: straightaway.length > 0 ? straightaway[0].amount : 0,\r\n            timeStamp: `${i}`,\r\n          },\r\n          {\r\n            name: \"Body need Repair\",\r\n            amount: toRepair.length > 0 ? toRepair[0].amount : 0,\r\n            timeStamp: `${i}`,\r\n          }\r\n        );\r\n      }\r\n\r\n      setData(data);\r\n    });\r\n  };\r\n  const getObjectSocket = () => {\r\n    axios\r\n      .post(\"http://113.174.246.52:7798/api/returnObjectSocket\")\r\n      .then((res) => {\r\n        res.data.push({ name: \"targetProduction\" });\r\n        setObjectSocket(res.data);\r\n      });\r\n  };\r\n  const config = {\r\n    data,\r\n    xField: \"timeStamp\",\r\n    yField: \"amount\",\r\n    seriesField: \"name\",\r\n    isPercent: true,\r\n    isStack: true,\r\n    xAxis: {},\r\n\r\n    label: {\r\n      position: \"middle\",\r\n      content: (val) => {\r\n        return val.amount !== 0 ? val.amount.toFixed(2) * 100 + \"%\" : \"\";\r\n      },\r\n      style: {\r\n        fill: \"#fff\",\r\n        fontSize: 14,\r\n        color: \"black\",\r\n      },\r\n      layout: [\r\n        {\r\n          type: \"hide-overlap\",\r\n        },\r\n      ],\r\n    },\r\n    xAxis: {\r\n      label: {\r\n        style: {\r\n          fontSize: 15,\r\n        },\r\n      },\r\n      title: {\r\n        text: \"DAY (IN CURRENT MONTH)\",\r\n        style: {\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n    yAxis: {\r\n      label: {\r\n        style: {\r\n          fontSize: 15,\r\n        },\r\n      },\r\n      title: {\r\n        text: \"PERCENT\",\r\n        style: {\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      position: \"top-left\",\r\n      itemName: {\r\n        style: {\r\n          fontSize: 18,\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"child-board FTT\">\r\n      <div className=\"title-FTT-Chart\">FTT</div>\r\n      <div className=\"dpu-FTT\">\r\n        <Column {...config} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartFTT;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Dashboard.css\";\r\nimport sockettIOClient from \"socket.io-client\";\r\nimport {\r\n  FloatButton,\r\n  Drawer,\r\n  Divider,\r\n  Form,\r\n  Button,\r\n  notification,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\nimport ChartDPU from \"./ChartDPU\";\r\nimport InformationProduct from \"./InformationProduct\";\r\nimport TimeDown from \"./TimeDown\";\r\nimport ChartFTT from \"./ChartFTT\";\r\n\r\nfunction Dashboard() {\r\n  const [dataLineProduct, setDataLineProduct] = useState([]);\r\n  const [dataDPU, setDataDPU] = useState([]);\r\n  const [dataTimeDown, setDataTimeDown] = useState([]);\r\n  // const [dataFTT, setDataFTT] = useState([])\r\n  const [objectSocket, setObjectSocket] = useState([]);\r\n  const socketRef = React.useRef();\r\n  const host = \"http://113.174.246.52:7798\";\r\n  const hostMysql = \"http://113.174.246.52:3005\";\r\n  const [openDraw, setOpenDraw] = useState(false);\r\n  const [form] = Form.useForm();\r\n  /// set type notification antd\r\n  const [api, contextHolder] = notification.useNotification();\r\n  // set ref for button out side form antd\r\n  const formRef = useRef();\r\n    const [socketFTT,setSocketFTT]=useState('')\r\n  const [dataTarget, setDataTarget] = useState({\r\n    pted: 0,\r\n    pvc: 0,\r\n    paint: 0,\r\n    pbs: 0,\r\n  });\r\n\r\n  //notification antd  with type: success, info, warning, error\r\n  const openNotificationWithIcon = (type, content) => {\r\n    api[type]({\r\n      message: \"Notification \",\r\n      description: content,\r\n      duration: 0,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getObjectSocket();\r\n    getDataDPUFTT();\r\n    getDataTimDown();\r\n  }, []);\r\n  //get Info from server by socket\r\n  useEffect(() => {\r\n    socketRef.current = sockettIOClient.connect(host);\r\n    // socketRef.current.on(\"connect\", () => {});\r\n    socketRef.current.on(\"connect\", () => {\r\n      console.log(\"connect\", socketRef.current.connected);\r\n      //   // automatically join the room\r\n      //   socketRef.current.emit(\"joined\");\r\n    });\r\n    objectSocket.map((val) => {\r\n      socketRef.current.on(val.name, (dataGot) => {\r\n        if (\r\n          val.name === \"inPTED\" ||\r\n          val.name === \"amountPTED\" ||\r\n          val.name === \"amountPaint\" ||\r\n          val.name === \"amountPBS\" ||\r\n          val.name === \"targetProduction\"\r\n        ) {\r\n          if (val.name === \"targetProduction\") getDataTargetProduction();\r\n          if (val.name === \"amountPBS\") getDataDPUFTT();\r\n          getData();\r\n        }\r\n\r\n        if (val.name === \"timeDownQC1K2\" || val.name === \"timeDownQC1K1\")\r\n          getDataTimDown();\r\n          if(val.name==='straightaway'||val.name==='toRepair')\r\n              setSocketFTT(val.name)\r\n        // setShowAmount((showAmount) => ({\r\n        //       ...showAmount,\r\n        //       [val.name]: dataGot,\r\n        // }));\r\n      });\r\n    });\r\n  }, [objectSocket]);\r\n\r\n  const getObjectSocket = () => {\r\n    axios\r\n      .post(\"http://113.174.246.52:7798/api/returnObjectSocket\")\r\n      .then((res) => {\r\n        res.data.push({ name: \"targetProduction\" });\r\n        setObjectSocket(res.data);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (dataTarget.length !== 0) {\r\n      let objectValue = {\r\n        targetPTED: dataTarget.targetPTED,\r\n        targetPVC: dataTarget.targetPVC,\r\n        targetPAINT: dataTarget.targetPAINT,\r\n        targetPBS: dataTarget.targetPBS,\r\n        targetDPU: dataTarget.targetDPU,\r\n      };\r\n      form.setFieldsValue(objectValue);\r\n    }\r\n  }, [dataTarget]);\r\n\r\n  //xử lý dữ liệu từ server\r\n  const getData = async () => {\r\n    /// get Production form each Line in RFID Paint Shop\r\n    const getTimeNow = new Date();\r\n    axios\r\n      .post(`${host}/api/returnLineProduct`, { getTimeNow })\r\n      .then((res) => {\r\n        let newArray = res.data.reduce((acc, curr) => {\r\n          let found = acc.find((item) => item.PROCESS_NO === curr.PROCESS_NO);\r\n          if (found) {\r\n            found.COUNT++;\r\n          } else {\r\n            acc.push({ PROCESS_NO: curr.PROCESS_NO, COUNT: 1 });\r\n          }\r\n          return acc;\r\n        }, []);\r\n        setDataLineProduct(newArray);\r\n        getDataTargetProduction();\r\n      })\r\n      .catch((error) => {\r\n        openNotificationWithIcon(\"warning\", error.toJSON().message);\r\n      });\r\n  };\r\n\r\n  //chat gpt\r\n  const getDataDPUFTT = async () => {\r\n    try {\r\n      const time = new Date();\r\n      const response1 = await axios.post(`${host}/api/returnListVinDay`, {\r\n        time,\r\n      });\r\n      const data = response1.data;\r\n      const response2 = await axios.post(`${hostMysql}/api/getDataErrorCar`, {\r\n        data,\r\n      });\r\n      const listCarError = response2.data;\r\n      const newArray = [];\r\n      const vinCodes = [];\r\n      for (let item of data) {\r\n        if (!vinCodes.includes(item.VIN_CODE)) {\r\n          const errorItem = listCarError.find(\r\n            (error) => error.error_code === item.VIN_CODE\r\n          );\r\n          if (errorItem) {\r\n            item.error_type = errorItem.error_type;\r\n            item.error_type_count = errorItem.error_type_count;\r\n            newArray.push(item);\r\n            vinCodes.push(item.VIN_CODE);\r\n          }\r\n        }\r\n      }\r\n      setDataDPU(newArray);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /// return value of target production\r\n  const getDataTargetProduction = async () => {\r\n    axios.post(`${host}/api/getDataTargetProduction`).then((res) => {\r\n      if (res.data !== \"null\") {\r\n        const result = res.data.reduce((acc, curr) => {\r\n          acc[curr.name] = curr.amount;\r\n          return acc;\r\n        }, {});\r\n        setDataTarget(result);\r\n      }\r\n    });\r\n  };\r\n  const getDataTimDown = async () => {\r\n    let time = new Date();\r\n\r\n    axios.post(`${host}/api/getDataTimeDown`, { time }).then((res) => {\r\n      if (res.data === \"null\") setDataTimeDown([]);\r\n      else if (res.data.length > 0) setDataTimeDown(res.data);\r\n      else console.log(res.data);\r\n    });\r\n  };\r\n  /// function Form antd\r\n  const onFinish = (values) => {\r\n    try {\r\n      axios\r\n        .post(`${host}/api/saveTargetValue`, { values })\r\n        .then((res) => {\r\n          if (res.data === \"ok\")\r\n            openNotificationWithIcon(\"success\", \"Save data successfully\");\r\n          else openNotificationWithIcon(\"error\", \"Data save failed\");\r\n          socketRef.current = sockettIOClient.connect(host);\r\n          socketRef.current.emit(\"targetProduction\");\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          openNotificationWithIcon(\"warning\", error.toJSON().message);\r\n        });\r\n    } catch (error) {\r\n      openNotificationWithIcon(\"error\", error.toJSON().message);\r\n    }\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(errorInfo);\r\n  };\r\n  const handleSubmit = () => {\r\n    formRef.current.submit();\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {contextHolder}\r\n      <div className=\"board\">\r\n        <InformationProduct value={{ dataTarget, dataLineProduct }} />\r\n      </div>\r\n      <div className=\"board\">\r\n        <ChartDPU value={{ dataDPU, dataTarget }} />\r\n      </div>\r\n      <div className=\"board\">\r\n        <TimeDown value={{ dataTimeDown }} />\r\n      </div>\r\n      <div className=\"board \">\r\n        <ChartFTT socket={{socketFTT}}/>\r\n      </div>\r\n      <FloatButton\r\n        icon={<SettingOutlined />}\r\n        style={{ bottom: 10, right: 10 }}\r\n        onClick={() => setOpenDraw(true)}\r\n      />\r\n      <Drawer\r\n        title=\"Configure display information\"\r\n        placement=\"right\"\r\n        onClose={() => setOpenDraw(false)}\r\n        open={openDraw}\r\n        width={400}\r\n        className=\"drawer\"\r\n      >\r\n        <div className=\"submitForm\">\r\n          <Button type=\"primary\" htmlFor=\"config\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </div>\r\n        <Divider className=\"divider\" orientation=\"left\">\r\n          Production Target\r\n        </Divider>\r\n\r\n        <div className=\"production\">\r\n          <Form\r\n            name=\"config\"\r\n            ref={formRef}\r\n            id=\"config\"\r\n            form={form}\r\n            labelCol={{\r\n              span: 8,\r\n            }}\r\n            wrapperCol={{\r\n              span: 16,\r\n            }}\r\n            style={{\r\n              maxWidth: 600,\r\n            }}\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n          >\r\n            <Form.Item\r\n              label=\"Target PT/ED\"\r\n              name=\"targetPTED\"\r\n              defaultValue=\"2321\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please! Input number of production target\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber style={{ width: 100 }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Target PVC\"\r\n              name=\"targetPVC\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please! Input number of production target\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber style={{ width: 100 }} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Target PAINT\"\r\n              name=\"targetPAINT\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please! Input number of production target\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber style={{ width: 100 }} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Target PBS\"\r\n              name=\"targetPBS\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please! Input number of production target\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber style={{ width: 100 }} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Target DPU\"\r\n              name=\"targetDPU\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please! Input number of DPU target\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber style={{ width: 100 }} />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n\r\n  <Dashboard />\r\n);\r\n"],"sourceRoot":""}