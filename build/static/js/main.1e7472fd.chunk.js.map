{"version":3,"sources":["components/chart.jsx","App.jsx","components/ChartDPU.jsx","components/InformationProduct.jsx","components/TimeDown.jsx","components/ChartFTT.jsx","components/Dashboard.jsx","index.jsx"],"names":["Chart","App","ChartDPU","props","value","dataDPUNoDirt","_useState","useState","_useState2","Object","slicedToArray","chartData","setChartData","_useState3","_useState4","_useState5","_useState6","colorData","setColorData","_useState7","_useState8","colorDataRatio","setColorDataRatio","useEffect","dataDPU","length","console","log","getDataColor","getDataColorRatio","dataVirtual","COLOR_COLOR","25D1","46V","42M","41W","47S","46G","47C","M6MY","KWE","ELG","KTV","EVL","EDZ","KCM","KLS","EEG","data","colorLib","toConsumableArray","Set","filter","val","COLOR","map","trim","amountColor","ind","push","name","amount","amountErrorDirt","numDays","Date","getDate","_loop3","i","PASS_DATETIME","result","reduce","total","nextval","parseInt","error_type_count","concat","date","type","configColor","appendPadding","angleField","colorField","radius","innerRadius","label","offset","content","style","textAlign","fontSize","fontWeight","layout","color","interactions","legend","itemName","fill","statistic","title","position","whiteSpace","overflow","textOverflow","configChartMain","xField","yField","seriesField","yAxis","formatter","v","replace","s","point","size","shape","_ref","_ref2","r","Number","item","configColorRatio","isStack","xAxis","text","react_default","a","createElement","className","line","assign","pie","column","InformationProduct","dataTarget","setDataTarget","dataLineProduct","setDataLineProduct","amountPBS","setAmountPBS","getAmountPBS","axios","post","then","res","returnValue","undefined","find","PROCESS_NO","COUNT","configPTED","percent","targetPTED","outline","border","distance","stroke","strokeOpacity","theme","styleSheet","brandColor","wave","configPVC","targetPVC","configPAINT","targetPAINT","configPBS","targetPBS","BookmarkBorder_default","marginRight","liquid","Math","round","VideoStable_default","Opacity_default","_ref3","DoneAll_default","_ref4","TimeDown","setData","getData","runTimer","setInterval","clearInterval","station","timeDownQC1K1","timeDownQC1K2","time","configdata","_loop","dataDraw","substring","timeStamp","toFixed","config","isGroup","columnStyle","ChartFTT","_config","objectSocket","setObjectSocket","socketRef","useRef","host","getObjectSocket","current","socketIoClient","connect","on","socket","socketFTT","array","straightaway","toRepair","isPercent","defineProperty","Dashboard_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Dashboard","setDataDPU","React","_useState9","_useState10","openDraw","setOpenDraw","_Form$useForm","Form","useForm","form","_notification$useNoti","notification","useNotification","_notification$useNoti2","api","contextHolder","formRef","_useState11","_useState12","setSocketFTT","_useState13","pted","pvc","paint","pbs","_useState14","openNotificationWithIcon","message","description","duration","getDataDPU","sockettIOClient","dataGot","getDataTargetProduction","objectValue","targetDPU","setFieldsValue","asyncToGenerator","_callee","getTimeNow","_context","newArray","acc","curr","found","toJSON","apply","arguments","_callee2","response1","response2","listCarError","dpuNoDirt","listCarErrorNoDirt","newArrayNoDirt","vinCodes","vinCodesNoDirt","_iterator","_step","_iterator2","_step2","_loop2","_context2","_createForOfIteratorHelper","includes","VIN_CODE","errorItem","error_code","error_type","n","e","f","t0","_callee3","_context3","components_InformationProduct","components_ChartDPU","components_TimeDown","components_ChartFTT","float_button","icon","SettingOutlined","bottom","right","onClick","drawer","placement","onClose","open","width","es_button","htmlFor","submit","divider","orientation","es_form","ref","id","labelCol","span","wrapperCol","maxWidth","initialValues","remember","onFinish","emit","onFinishFailed","errorInfo","autoComplete","Item","defaultValue","rules","required","input_number","ReactDOM","createRoot","document","getElementById","render","components_Dashboard"],"mappings":"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KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,IACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,IACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,IACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,IACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,IAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,IAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,IAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,IAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,QACRhB,OAAU,GAEZ,CACEe,KAAQ,KACRC,KAAQ,UACRhB,OAAU,GAEZ,CACEe,KA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","file":"static/js/main.1e7472fd.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { Line} from \"@ant-design/plots\";\r\n\r\nfunction Chart(props) {\r\n    //get width of window\r\n    const targetRef = useRef();\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n          setData(props.values);\r\n    }, [props.values]);\r\n\r\n    const type = props.type;\r\n    // const { InteractionAction, registerInteraction, registerAction } = G2;\r\n    const [labels, setLabels] = useState(15);\r\n    useLayoutEffect(() => {\r\n        if (targetRef.current) {\r\n            if (targetRef.current.offsetWidth > 945) {\r\n                setLabels(20);\r\n            }\r\n            if (targetRef.current.offsetWidth > 1265) {\r\n                setLabels(30);\r\n            }\r\n     \r\n        }\r\n    }, [labels]);\r\n\r\n    const config = {\r\n        data,\r\n        color: [\"#000099\", \"#66ff33\", \"#ff0000\"],\r\n        xField: \"year\",\r\n        xAxis: {\r\n            label: {\r\n                style: {\r\n                    fontWeight: \"bold\",\r\n                    fontSize: labels,\r\n                },\r\n            },\r\n        },\r\n        yAxis: {\r\n            label: {\r\n                style: {\r\n                    fontWeight: \"bold\",\r\n                    fontSize: labels,\r\n                },\r\n                // formatter: (v) =>v=parseInt(v)+5,\r\n            },\r\n\r\n            tickInterval: 30,\r\n            max: type === \"wbs\" ? 250 : 400,\r\n            grid: null,\r\n        },\r\n        yField: \"value\",\r\n        seriesField: \"category\",\r\n        legend: {\r\n            position: \"bottom\",\r\n            itemName: {\r\n                style: {\r\n                    fontSize: labels - 2,\r\n                },\r\n            },\r\n        },\r\n        height: null,\r\n        width: null,\r\n        options: {\r\n            aspecRatio: 1,\r\n        },\r\n        lineStyle: {\r\n            lineWidth: labels ===40 ? 15 : 5,\r\n        },\r\n        point: {\r\n            size: 5,\r\n            shape: \"custom-point\",\r\n            style: {\r\n                fill: \"white\",\r\n                stroke: \"#5B8FF9\",\r\n                lineWidth: 2,\r\n            },\r\n        },\r\n        tooltip: {\r\n            showMarkers: true,\r\n            style: {\r\n                color: \"green\",\r\n            },\r\n        },\r\n        state: {\r\n            active: {\r\n                style: {\r\n                    shadowBlur: 4,\r\n                    stroke: \"#000\",\r\n                    fill: \"red\",\r\n                },\r\n            },\r\n        },\r\n        interactions: [\r\n            {\r\n                type: \"custom-marker-interaction\",\r\n            },\r\n        ],\r\n        label: {\r\n            layout: [\r\n                {\r\n                    type: \"hide-overlap\",\r\n                },\r\n            ],\r\n            formatter: ({ value }) => (value ===0 ? \"\" : value),\r\n            //\r\n            style: {\r\n                textAlign: \"left\",\r\n                fontSize: labels,\r\n                fontWeight: \"bolder\",\r\n            },\r\n        },\r\n        annotations: [\r\n            {\r\n                type: \"region\",\r\n                start: [\"min\", type === \"wbs\" ? 50 : 100],\r\n                end: [\"max\", \"0\"],\r\n                color: \"#fff000\",\r\n                style: {\r\n                    fill: \"l(0) 0:#05fc57 1:#05fc57\",\r\n                },\r\n            },\r\n            {\r\n                type: \"line\",\r\n                start: [\"min\", type === \"wbs\" ? 50 : 100],\r\n                end: [\"max\", type === \"wbs\" ? 50 : 100],\r\n                style: {\r\n                    stroke: \"#00FF00\",\r\n                    lineDash: [1, 1],\r\n                    lineWidth: 1,\r\n                },\r\n            },\r\n\r\n            {\r\n                type: \"line\",\r\n                start: [\"min\", type === \"wbs\" ? 150 : 250],\r\n                end: [\"max\", type === \"wbs\" ? 150 : 250],\r\n                style: {\r\n                    stroke: \"#F4664A\",\r\n                    lineDash: [1, 1],\r\n                    lineWidth: 1,\r\n                },\r\n            },\r\n            {\r\n                type: \"region\",\r\n                start: [\"min\", type === \"wbs\" ? 150 : 250],\r\n                end: [\"max\", \"max\"],\r\n                //color: '#fff000',\r\n                style: {\r\n                    fill: \"l(0) 0:#fc0505 1:#eb071e\",\r\n                },\r\n            },\r\n            {\r\n                type: \"text\",\r\n                position: [\"min\", type === \"wbs\" ? 50 : 100],\r\n                content: type === \"wbs\" ? \"50\" : \"100\",\r\n                offsetY: -10,\r\n                offsetX: 4,\r\n                style: {\r\n                    textBaseline: \"bottom\",\r\n                    fontSize: labels - 2,\r\n                },\r\n            },\r\n            {\r\n                type: \"text\",\r\n                position: [\"min\", type === \"wbs\" ? 150 : 250],\r\n                content: type === \"wbs\" ? \"150\" : \"250\",\r\n                offsetY: -20,\r\n                offsetX: 4,\r\n                style: {\r\n                    textBaseline: \"top\",\r\n                    fontSize: labels - 2,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    return (\r\n        <div ref={targetRef}>\r\n            <Line\r\n                {...config}\r\n                style={{\r\n                    width: \"100%\",\r\n                    // padding: 10,\r\n                    height: 'calc(55vh - 20px)',\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport \"antd/dist/reset.css\";\r\nimport Chart from \"./components/chart.jsx\";\r\nimport axios from \"axios\";\r\nimport sockettIOClient from \"socket.io-client\";\r\nimport ChartColumn from \"./components/ChartColumn.jsx\";\r\n\r\nfunction App() {\r\n\r\n      ///ẩn hiện các biểu đồ  --- trạng thái\r\n      const [change, setChange] = useState(false)\r\n      const [dataWBS, setDataWBS] = useState([]);\r\n      const [dataDPU, setDataDPU] = useState([]);\r\n      const [dataPBS, setDataPBS] = useState([]);\r\n      const [objectSocket, setObjectSocket] = useState([]);\r\n      const host = \"http://113.174.246.52:7798\";\r\n      const socketRef = React.useRef();\r\n      const [showAmount, setShowAmount] = useState({\r\n            inWBS: 0,\r\n            outWBS: 0,\r\n            amountWBS: 0,\r\n            emptyWBS: 0,\r\n            inPTED: 0,\r\n            amountPTED: 0,\r\n            bufferEDOVEN: 0,\r\n            EmptyBufferEDOVEN: 0,\r\n            passPVC: 0,\r\n            recoat: 0,\r\n            amountPaint: 0,\r\n            inPBS: 0,\r\n            outPBS: 0,\r\n            backLuxury: 0,\r\n            amountPBS: 0,\r\n            totalRecoat: 0,\r\n            CarError: 0,\r\n            CarGood: 0,\r\n      });\r\n      var  numDays = parseInt(\r\n            new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate()\r\n      )\r\nnumDays=parseInt(new Date().getDate())\r\n\r\n\r\n      ////useState cập nhật chiều rộng của cửa sổ     \r\n      //\r\n      //const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n      ///// kiểm tra thay đổi chiều rộng của cửa sổ\r\n      // useEffect(() => {\r\n      //       function handleResize() {\r\n      //             setWindowWidth(window.innerWidth);\r\n      //       }\r\n      //       window.addEventListener(\"resize\", handleResize);\r\n      //       return () => window.removeEventListener(\"resize\", handleResize);\r\n      // }, []);\r\n      // useEffect(() => {\r\n      //       getObjectSocket();\r\n      //       //connect socket\r\n      //       getData();\r\n      // }, []);\r\n\r\n      ////set ẩn hiện các biểu đồ\r\n\r\n      useEffect(() => {\r\n            // Chuyển đổi trạng thái hiển thị của các div sau 5 giây\r\n            const timer = setTimeout(() => {\r\n                  setChange((prev) => !prev);\r\n            }, 10000);\r\n\r\n            // Xóa bộ đếm khi component bị unmount hoặc trạng thái thay đổi\r\n            return () => clearTimeout(timer);\r\n      }, [change])\r\n\r\n      useEffect(() => {\r\n            socketRef.current = sockettIOClient.connect(host);\r\n            // socketRef.current.on(\"connect\", () => {});\r\n            socketRef.current.on(\"connect\", () => {\r\n                 \r\n                  // automatically join the room\r\n                  socketRef.current.emit(\"joined\");\r\n                  getData();\r\n            });\r\n            objectSocket.map((val) => {\r\n                  socketRef.current.on(val.name, (dataGot) => {\r\n                        if (val.name === \"amountWBS\" || val.name === \"amountPBS\") getData();\r\n                        setShowAmount((showAmount) => ({\r\n                              ...showAmount,\r\n                              [val.name]: dataGot,\r\n                        }));\r\n                  });\r\n            });\r\n      }, [objectSocket]);\r\n      // const countSumDataArray =async(array,coulumn)=>{\r\n      //     var result\r\n      //     for(let i = 0;i<array.length;i++){\r\n      //         array[i][column]\r\n      //     }\r\n      // }\r\n      const getData = async () => {\r\n            setDataWBS([]);\r\n            setDataPBS([]);\r\n            setDataDPU([]);\r\n        axios\r\n                  .post(\"http://113.174.246.52:7798/api/returnDataChart\")\r\n                  .then(async (res) => {\r\n                        var rawData = res.data;\r\n                        for (let i = 1; i <= numDays; i++) {\r\n                              let valueWBS = await getvalue(rawData, i, \"amountWBS\");\r\n\r\n                              setDataWBS((dataWBS) => [\r\n                                    ...dataWBS,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valueWBS.length === 0 ? 0 : valueWBS.amount,\r\n                                          category: \"Số lượng BODY\",\r\n                                    },\r\n                              ]);\r\n                              let valuePBS = await getvalue(rawData, i, \"amountPBS\");\r\n                              setDataPBS((dataPBS) => [\r\n                                    ...dataPBS,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valuePBS.length === 0 ? 0 : valuePBS.amount,\r\n                                          category: \"Số lượng BODY\",\r\n                                    },\r\n                              ]);\r\n\r\n                              let valueError = await getvalue(rawData, i, \"CarError\");\r\n                              setDataDPU((dataDPU) => [\r\n                                    ...dataDPU,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valueError.length === 0 ? 0 : valueError.amount,\r\n                                          type: \"Số lượng BODY lỗi\",\r\n                                    },\r\n                              ]);\r\n                              let valueGood = await getvalue(rawData, i, \"CarGood\");\r\n\r\n                              setDataDPU((dataDPU) => [\r\n                                    ...dataDPU,\r\n                                    {\r\n                                          year: `${i}`,\r\n                                          value: valueGood.length === 0 ? 0 : valueGood.amount,\r\n                                          type: \"Số lượng BODY KHÔNG lỗi\",\r\n                                    },\r\n                              ]);\r\n                        }\r\n                        Object.keys(rawData).map((val, index) => {\r\n                              if (rawData[val].timeStamp.substring(0, 2) === new Date().getDate()) {\r\n                                    setShowAmount((showAmount) => ({\r\n                                          ...showAmount,\r\n                                          [rawData[val].name]: rawData[val].amount,\r\n                                    }));\r\n                              }\r\n                              return val\r\n                        });\r\n                  });\r\n      };\r\n      const getvalue = async (array, i, position) => {\r\n            var value = [];\r\n            Object.keys(array).map((val) => {\r\n                  if (\r\n                        parseInt(array[val].timeStamp.substring(0, 2)) === i &&\r\n                        array[val].name === position\r\n                  ) {\r\n                        value = array[val];\r\n                     \r\n                  }\r\n                  return val\r\n            });\r\n\r\n            return value;\r\n      };\r\n      // const getObjectSocket = () => {\r\n      //       axios\r\n      //             .post(\"http://113.174.246.52:7798/api/returnObjectSocket\")\r\n      //             .then((res) => {\r\n      //                   setObjectSocket(res.data);\r\n      //             });\r\n      // };\r\n      return (\r\n            <div className=\"App\">\r\n                  <Row className=\"row\">\r\n                        <Col className=\"column\" style={{ padding: 5 }}>\r\n                              <Col className=\"Red\">\r\n                                    <div className=\"cards\">\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN WBS\"\r\n                                                      bordered={true}\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                      }}\r\n                                                      className=\"detailCard\"\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body vào chuyền WBS:\r\n                                                            <span className=\"result\"> {showAmount.inWBS}</span>{\" \"}\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body ra chuyền WBS:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.outWBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body trên chuyền WBS:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.amountWBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng vị trí trống trên chuyền WBS:\r\n                                                            <span className=\"result\"> {showAmount.emptyWBS}</span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN PT/ED\"\r\n                                                      bordered={true}\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                      }}\r\n                                                      className=\"detailCard\"\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body vào chuyền PT/ED:\r\n                                                            <span className=\"result\"> {showAmount.inPTED}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body trong chuyền PT/ED:\r\n                                                            <span className=\"result\"> {showAmount.amountPTED}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body Buffer ED Oven:\r\n                                                            <span className=\"result\"> {showAmount.bufferEDOVEN}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Buffer trống ED Oven:\r\n                                                            <span className=\"result\">\r\n                                                                  {showAmount.emptyBufferEDOVEN}\r\n                                                            </span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN PVC & SƠN MÀU\"\r\n                                                      bordered={true}\r\n                                                      className=\"detailCard\"\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                      }}\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body qua chuyền PVC:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.passPVC} </span>\r\n                                                      </p>\r\n                                                      {/* <p>\r\n                                                            Tổng xe sơn lại trong Ngày:\r\n                                                            <span className=\"result\"> {showAmount.recoat}</span>\r\n                                                      </p> */}\r\n                                                      <p>\r\n                                                            Tổng xe sơn lại trong Tháng:\r\n                                                            <span className=\"result\"> {showAmount.totalRecoat}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng xe tại chuyền sơn màu:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.amountPaint}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng xe lỗi:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.CarError}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng xe không lỗi:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.CarGood}</span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                          <div className=\"site-card-border-less-wrapper card\">\r\n                                                <Card\r\n                                                      title=\"CHUYỀN PBS\"\r\n                                                      bordered={true}\r\n                                                      className=\"detailCard\"\r\n                                                      style={{\r\n                                                            backgroundColor: \"#f0e68c\",\r\n                                                            width: \"100%\",\r\n                                                      }}\r\n                                                >\r\n                                                      <p>\r\n                                                            Tổng Body vào line PBS:\r\n                                                            <span className=\"result\"> {showAmount.inPBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body ra line PBS:\r\n                                                            <span className=\"result\"> {showAmount.outPBS}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body màu cấp về Luxury:\r\n                                                            <span className=\"result\"> {showAmount.toLuxury}</span>\r\n                                                      </p>\r\n                                                      <p>\r\n                                                            Tổng Body trên chuyền PBS:{\" \"}\r\n                                                            <span className=\"result\"> {showAmount.amountPBS}</span>\r\n                                                      </p>\r\n                                                </Card>\r\n                                          </div>\r\n                                    </div>\r\n                              </Col>\r\n                        </Col>\r\n                  </Row>\r\n                  {\r\n                        change ? (<Row className=\"row1\" style={{ display: change === true ? 'inline-block' : 'none' }}>\r\n                              <Col className=\"column\" style={{ padding: 5 }}>\r\n                                    <Col className=\"Green\">\r\n                                          <Row\r\n                                          className=\"chartAntd\"\r\n                                                // style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\r\n                                          >\r\n                                                <Col\r\n                                                className=\"chart\"\r\n                                                      \r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">SỐ LƯỢNG BODY CHUYỀN WBS</h3>\r\n                                                      </div>\r\n                                                      <Chart values={dataWBS} type={\"wbs\"} />\r\n                                                </Col>\r\n\r\n                                                <Col\r\n                                                   className=\"chart\"\r\n                                                     \r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">SỐ LƯỢNG BODY CHUYỀN PBS</h3>\r\n                                                      </div>\r\n                                                      <Chart values={dataPBS} type={\"pbs\"} />\r\n                                                </Col>\r\n                                          </Row>\r\n                                    </Col>\r\n                              </Col>\r\n                        </Row>) : (<Row className=\"row2\" style={{ display: change === false ? 'inline-block' : 'none' }}>\r\n                              <Col className=\"column\" style={{ padding: 5 }}>\r\n                                    <Col className=\"Green\">\r\n                                          <Row\r\n                                                className=\"chartAntd\"\r\n                                                style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\r\n                                          >\r\n                                                <Col\r\n                                                      className=\"chartDPU\"\r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">BIỂU ĐỒ DPU-FTT</h3>\r\n                                                      </div>\r\n                                                      <ChartColumn value={dataDPU} />\r\n                                                </Col>\r\n\r\n                                                {/* <Col\r\n                                                      className=\"chart\"\r\n                                                >\r\n                                                      <div className=\"titleChart\">\r\n                                                            <h3 className=\"nameTittle\">BIỂU ĐỒ FTT</h3>\r\n                                                      </div>\r\n                                                      <Chart values={dataPBS} type={\"pbs\"} />\r\n                                                </Col> */}\r\n                                          </Row>\r\n                                    </Col>\r\n                              </Col>\r\n                        </Row>\r\n                        )\r\n                  }\r\n\r\n\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/Dpu.css\";\r\nimport { Line, Pie, Column, G2 } from \"@ant-design/plots\";\r\nimport { ContactSupportOutlined } from \"@mui/icons-material\";\r\nimport { red } from \"@mui/material/colors\";\r\nfunction ChartDPU(props) {\r\n\r\n     let data=props.value.dataDPUNoDirt\r\n    \r\n\r\n      const [chartData, setChartData] = useState([]);\r\n      const [chartDataNoDirt,setChartDataNoDirt]=useState([])\r\n      const [colorData, setColorData] = useState([]);\r\n      const [colorDataRatio, setColorDataRatio] = useState([]);\r\n      // const [dataChart,setDataChart]=useState([])\r\n      useEffect(() => {\r\n            if (props.value.dataDPU.length > 0) {\r\n                  console.log(props.value.dataDPU)\r\n                 //getDataDPU(props.value.dataDPU, props.value.dataTarget.targetDPU);\r\n                  getDataColor(props.value.dataDPU);\r\n                  getDataColorRatio(props.value.dataDPU);\r\n                  //getDataDPUNoDirt(data, props.value.dataTarget.targetDPU)\r\n                  setChartData(dataVirtual)\r\n            }\r\n      }, [props.value]);\r\n\r\n      const COLOR_PLATE_10 = [\r\n            \"#5B8FF9\",\r\n            \"#5AD8A6\",\r\n            \"#5D7092\",\r\n            \"#F6BD16\",\r\n            \"#E8684A\",\r\n            \"#6DC8EC\",\r\n            \"#9270CA\",\r\n            \"#FF9D4D\",\r\n            \"#269A99\",\r\n            \"#FF99C3\",\r\n      ];\r\n    \r\n      const COLOR_COLOR = {\r\n            \"25D1\": \"#f2faf4\",\r\n            \"46V\": \"#d60d0d\",\r\n            \"42M\": \"#151E2E\",\r\n            \"41W\": \"#0E0E0E\",\r\n            \"47S\": \"#979985\",\r\n            \"46G\": \"#6A6B6D\",\r\n            \"47C\": \"#4054db\",\r\n            M6MY: \"#900C12\",\r\n            KWE: \"#f2faf4\",\r\n            ELG: \"#7A381B\",\r\n            KTV: \"#060708\",\r\n            EVL: \"#272B2E\",\r\n            EDZ: \"#00497B\",\r\n            KCM: \"#A56549\",\r\n            KLS: \"#D16B00\",\r\n            EEG: \"#225F8F\",\r\n      };\r\n\r\n      const getDataDPUNoDirt=(data,targetDPU)=>{\r\n            let mazda = [];\r\n            let peugeot = [];\r\n            let target = [];\r\n            let numDays = new Date().getDate();\r\n            if (numDays < 15) numDays = 15;\r\n            for (let i = 1; i <= numDays; i++) {\r\n                  let dataMazda = data.filter(\r\n                        (val) =>\r\n                              val.TYPE === \"MAZDA\" && new Date(val.PASS_DATETIME).getDate() === i\r\n                  );\r\n                  if (dataMazda.length > 0) {\r\n                        let amount = parseInt(\r\n                              (\r\n                                    dataMazda.reduce(\r\n                                          (total, nexval) => total + parseInt(nexval.error_type_count),\r\n                                          0\r\n                                    ) / dataMazda.length\r\n                              ).toFixed(2)\r\n                        );\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"MAZDA\",\r\n                              amount: amount,\r\n                        });\r\n                  } else {\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"MAZDA\",\r\n                              amount: 0,\r\n                        });\r\n                  }\r\n                  let dataPeugeot = data.filter(\r\n                        (val) =>\r\n                              val.TYPE === \"PEUGEOT\" && new Date(val.PASS_DATETIME).getDate() === i\r\n                  );\r\n                  if (dataPeugeot.length > 0) {\r\n                        let amount = parseInt(\r\n                              (\r\n                                    dataPeugeot.reduce(\r\n                                          (total, nexval) => total + parseInt(nexval.error_type_count),\r\n                                          0\r\n                                    ) / dataPeugeot.length\r\n                              ).toFixed(2)\r\n                        );\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"PEUGEOT\",\r\n                              amount: amount,\r\n                        });\r\n                  } else {\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"PEUGEOT\",\r\n                              amount: 0,\r\n                        });\r\n                  }\r\n                  target.push({\r\n                        date: `${i}`,\r\n                        type: \"TARGET\",\r\n                        amount: targetDPU,\r\n                  });\r\n            }\r\n            setChartDataNoDirt(mazda.concat(peugeot.concat(target)));\r\n      }\r\n      const getDataDPU = (data, targetDPU) => {\r\n            let mazda = [];\r\n            let peugeot = [];\r\n            let target = [];\r\n            let numDays = new Date().getDate();\r\n            if (numDays < 15) numDays = 15;\r\n            for (let i = 1; i <= numDays; i++) {\r\n                  let dataMazda = data.filter(\r\n                        (val) =>\r\n                              val.TYPE === \"MAZDA\" && new Date(val.PASS_DATETIME).getDate() === i\r\n                  );\r\n                  if (dataMazda.length > 0) {\r\n                        let amount = parseInt(\r\n                              (\r\n                                    dataMazda.reduce(\r\n                                          (total, nexval) => total + parseInt(nexval.error_type_count),\r\n                                          0\r\n                                    ) / dataMazda.length\r\n                              ).toFixed(2)\r\n                        );\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"MAZDA\",\r\n                              amount: amount,\r\n                        });\r\n                  } else {\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"MAZDA\",\r\n                              amount: 0,\r\n                        });\r\n                  }\r\n                  let dataPeugeot = data.filter(\r\n                        (val) =>\r\n                              val.TYPE === \"PEUGEOT\" && new Date(val.PASS_DATETIME).getDate() === i\r\n                  );\r\n                  if (dataPeugeot.length > 0) {\r\n                        let amount = parseInt(\r\n                              (\r\n                                    dataPeugeot.reduce(\r\n                                          (total, nexval) => total + parseInt(nexval.error_type_count),\r\n                                          0\r\n                                    ) / dataPeugeot.length\r\n                              ).toFixed(2)\r\n                        );\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"PEUGEOT\",\r\n                              amount: amount,\r\n                        });\r\n                  } else {\r\n                        mazda.push({\r\n                              date: `${i}`,\r\n                              type: \"PEUGEOT\",\r\n                              amount: 0,\r\n                        });\r\n                  }\r\n                  target.push({\r\n                        date: `${i}`,\r\n                        type: \"TARGET\",\r\n                        amount: targetDPU,\r\n                  });\r\n            }\r\n            setChartData(mazda.concat(peugeot.concat(target)));\r\n      };\r\n      const getDataColor = (data) => {\r\n            const colorLib = [\r\n                  ...new Set(\r\n                        data.filter((val) => val.COLOR !== \"\").map((val) => val.COLOR.trim())\r\n                  ),\r\n            ];\r\n            let colorData = [];\r\n            let amountColor = 0;\r\n            colorLib.map((val, ind) => {\r\n                  amountColor = data.filter((value) => value.COLOR === val).length;\r\n                  colorData.push({\r\n                        name: val,\r\n                        amount: amountColor,\r\n                  });\r\n            });\r\n            setColorData(colorData);\r\n      };\r\n      const getDataColorRatio = (data) => {\r\n            const colorLib = [\r\n                  ...new Set(\r\n                        data.filter((val) => val.COLOR !== \"\").map((val) => val.COLOR.trim())\r\n                  ),\r\n            ];\r\n            let colorData = [];\r\n            let amountColor = 0;\r\n            let amountErrorDirt = 0;\r\n            let numDays = new Date().getDate();\r\n            if (numDays < 15) numDays = 15;\r\n\r\n            for (let i = 1; i <= numDays; i++) {\r\n                  colorLib.map((val, ind) => {\r\n                        amountColor = data.filter(\r\n                              (value) =>\r\n                                    value.COLOR === val && new Date(value.PASS_DATETIME).getDate() === i\r\n                        ).length;\r\n                        amountErrorDirt = data\r\n                              .filter(\r\n                                    (value) =>\r\n                                          value.COLOR === val &&\r\n                                          new Date(value.PASS_DATETIME).getDate() === i\r\n                              )\r\n                              .reduce(\r\n                                    (total, nextval) => total + parseInt(nextval.error_type_count),\r\n                                    0\r\n                              );\r\n                        let result = amountErrorDirt / amountColor;\r\n\r\n                        colorData.push({\r\n                              name: `${val}`,\r\n                              amount: !result ? 0 : parseInt(amountErrorDirt / amountColor),\r\n                              date: `${i}`,\r\n                        });\r\n                        return val;\r\n                  });\r\n            }\r\n            setColorDataRatio(colorData);\r\n      };\r\n\r\n      const dataVirtual =\r\n            [\r\n                  {\r\n                    \"date\": \"1\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"1\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"2\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 7\r\n                  },\r\n                  {\r\n                    \"date\": \"2\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"3\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 10\r\n                  },\r\n                  {\r\n                    \"date\": \"3\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"4\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 7\r\n                  },\r\n                  {\r\n                    \"date\": \"4\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"5\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 10\r\n                  },\r\n                  {\r\n                    \"date\": \"5\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"6\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"6\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 5\r\n                  },\r\n                  {\r\n                    \"date\": \"7\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 10\r\n                  },\r\n                  {\r\n                    \"date\": \"7\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"8\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 5\r\n                  },\r\n                  {\r\n                    \"date\": \"8\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 3\r\n                  },\r\n                  {\r\n                    \"date\": \"9\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 7\r\n                  },\r\n                  {\r\n                    \"date\": \"9\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"10\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"10\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 10\r\n                  },\r\n                  {\r\n                    \"date\": \"11\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 5\r\n                  },\r\n                  {\r\n                    \"date\": \"11\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 7\r\n                  },\r\n                  {\r\n                    \"date\": \"12\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 10\r\n                  },\r\n                  {\r\n                    \"date\": \"12\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"13\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 7\r\n                  },\r\n                  {\r\n                    \"date\": \"13\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"14\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"14\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"15\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 5\r\n                  },\r\n                  {\r\n                    \"date\": \"15\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 7\r\n                  },\r\n                  {\r\n                    \"date\": \"16\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"16\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 10\r\n                  },\r\n                  {\r\n                    \"date\": \"17\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"17\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"18\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"18\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"19\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"19\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 1\r\n                  },\r\n                  {\r\n                    \"date\": \"20\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 10\r\n                  },\r\n                  {\r\n                    \"date\": \"20\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 0\r\n                  },\r\n                  {\r\n                    \"date\": \"21\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 7\r\n                  },\r\n                  {\r\n                    \"date\": \"21\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"22\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"22\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"23\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 4\r\n                  },\r\n                  {\r\n                    \"date\": \"23\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"24\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"24\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"25\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"25\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"26\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 9\r\n                  },\r\n                  {\r\n                    \"date\": \"26\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 0\r\n                  },\r\n                  {\r\n                    \"date\": \"27\",\r\n                    \"type\": \"MAZDA\",\r\n                    \"amount\": 8\r\n                  },\r\n                  {\r\n                    \"date\": \"27\",\r\n                    \"type\": \"PEUGEOT\",\r\n                    \"amount\": 6\r\n                  },\r\n                  {\r\n                    \"date\": \"1\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"2\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"3\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"4\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"5\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"6\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"7\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"8\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"9\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"10\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"11\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"12\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"13\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"14\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"15\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"16\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"17\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"18\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"19\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"20\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"21\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"22\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"23\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"24\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"25\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"26\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  },\r\n                  {\r\n                    \"date\": \"27\",\r\n                    \"type\": \"TARGET\",\r\n                    \"amount\": 11\r\n                  }\r\n                ]\r\n      \r\n      const configColor = {\r\n            appendPadding: 10,\r\n            data: colorData,\r\n            angleField: \"amount\",\r\n            colorField: \"name\",\r\n            radius: 1,\r\n            innerRadius: 0.6,\r\n            label: {\r\n                  type: \"inner\",\r\n                  offset: \"-50%\",\r\n                  content: \"{value}\",\r\n                  style: {\r\n                        textAlign: \"center\",\r\n                        fontSize: 14,\r\n                        fontWeight: \"bold\",\r\n                  },\r\n                  layout: [\r\n                        {\r\n                              type: \"adjust-color\",\r\n                        },\r\n                  ],\r\n            },\r\n            color: (val) => COLOR_COLOR[`${val.name}`],\r\n            interactions: [\r\n                  {\r\n                        type: \"element-selected\",\r\n                  },\r\n                  {\r\n                        type: \"element-active\",\r\n                  },\r\n            ],\r\n            legend: {\r\n                  itemName: {\r\n                        style: {\r\n                              fontSize: 15,\r\n                              fill: \"white\",\r\n                        },\r\n                  },\r\n            },\r\n            statistic: {\r\n                  title: false,\r\n                  position: \"center\",\r\n                  content: {\r\n                        style: {\r\n                              whiteSpace: \"pre-wrap\",\r\n                              overflow: \"hidden\",\r\n                              textOverflow: \"ellipsis\",\r\n                              fontSize: 15,\r\n                              color: \"white\",\r\n                        },\r\n                        content: \"Amount\\nColor\",\r\n                  },\r\n            },\r\n      };\r\n      ///config chart Line with dpu chart main\r\n\r\n      chartData.length>0 && console.log(chartData)\r\n      const configChartMain = {\r\n            data: chartData,\r\n            xField: \"date\",\r\n            yField: \"amount\",\r\n            seriesField: \"type\",\r\n            yAxis: {\r\n                  label: {\r\n                        formatter: (v) =>\r\n                              `${v}`.replace(/\\d{1,3}(?=(\\d{3})+$)/g, (s) => `${s},`),\r\n                  },\r\n            },\r\n            color: COLOR_PLATE_10,\r\n            point: {\r\n                  size: 10,\r\n                  shape: ({ type }) => {\r\n                        return type === \"MAZDA\" ? \"square\" : \"circle\";\r\n                  },\r\n                  style: ({ date }) => {\r\n                        return {\r\n                              r: Number(date) % 4 ? 0 : 3,\r\n                        };\r\n                  },\r\n            },\r\n            label: {\r\n                  layout: [\r\n                        {\r\n                              type: \"hide-overlap\",\r\n                        },\r\n                  ],\r\n\r\n                  style: {\r\n                        textAlign: \"left\",\r\n                        fontSize: 15,\r\n                  },\r\n                  formatter: (item) => item.amount,\r\n            },\r\n            legend: {\r\n                  itemName: {\r\n                        style: {\r\n                              fontSize: 16,\r\n                              fontWeight: \"bold\",\r\n                        },\r\n                  },\r\n            },\r\n      };\r\n\r\n      const configColorRatio = {\r\n            data: colorDataRatio,\r\n            isStack: true,\r\n            xField: \"date\",\r\n            yField: \"amount\",\r\n            seriesField: \"name\",\r\n\r\n            xAxis: {\r\n                  title: {\r\n                        text: \"DIRT RATE OF EACH COLOR\",\r\n                        style: {\r\n                              fontSize: 16,\r\n                              fontWeight: \"bold\",\r\n                        },\r\n                  },\r\n            },\r\n            label: {\r\n                  formatter: (val) => (val.amount !== 0 ? val.amount : \"\"),\r\n\r\n                  position: \"middle\",\r\n\r\n                  layout: [\r\n                        {\r\n                              type: \"interval-adjust-position\",\r\n                        },\r\n                        {\r\n                              type: \"interval-hide-overlap\",\r\n                        },\r\n                        {\r\n                              type: \"adjust-color\",\r\n                        },\r\n                  ],\r\n            },\r\n      };\r\n\r\n      return (\r\n            <div className=\"child-board dpu\">\r\n                  <div className=\"titleChartDPU\">DPU</div>\r\n                  <div className=\"dpu-chart-main\">\r\n                        <div className=\"titleDPUChart\">DPU CHART</div>\r\n                        <Line {...configChartMain} className=\"chart-dpu\" />\r\n                  </div>\r\n                  <div className=\"dpu-chart-color\">\r\n                        <div className=\"dpu-chart-mount-color\">\r\n                              <Pie {...configColor} className=\"chart-color\"></Pie>\r\n                        </div>\r\n                        <div className=\"dpu-chart-ratio-color\">\r\n                              {/* <div className='title-color-ratio'>COLOR RATIO</div> */}\r\n                              <Column {...configColorRatio} className=\"chart-color-ratio\" />\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\nexport default ChartDPU;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Liquid } from '@ant-design/plots';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport VideoStableIcon from '@mui/icons-material/VideoStable';\r\nimport OpacityIcon from '@mui/icons-material/Opacity';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport axios from \"axios\";\r\n\r\nfunction InformationProduct(props) {\r\n\r\n      const [dataTarget, setDataTarget] = useState([])\r\n      const [dataLineProduct, setDataLineProduct] = useState([])\r\n    const [amountPBS,setAmountPBS]=useState(0)\r\n\r\n      useEffect(() => {\r\n            setDataLineProduct(props.value.dataLineProduct)\r\n            setDataTarget(props.value.dataTarget)\r\n          getAmountPBS()\r\n      }, [props.value])\r\n    const getAmountPBS=()=>{\r\naxios.post(\"http://113.174.246.52:7798/api/getAmountPBS\").then(res=>{\r\n\r\n   setAmountPBS(res.data[0].amount)\r\n})\r\n    }\r\n\r\n      /// return value of each Line \r\n      const returnValue = (line) => {\r\n            let result = 0\r\n            if (dataLineProduct.length > 0) {\r\n                  let result = dataLineProduct.find(item => item.PROCESS_NO === line) !== undefined ? dataLineProduct.find(item => item.PROCESS_NO === line).COUNT : 0\r\n                  return result\r\n            }\r\n            else\r\n                  return result\r\n      }\r\n      ///// Cấu hình biểu đồ\r\n      const configPTED = {\r\n            percent: returnValue(20) / dataTarget.targetPTED,\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#76b583',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#76b583',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n      };\r\n      const configPVC = {\r\n            percent: returnValue(50) / dataTarget.targetPVC,\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#cdc77d',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#cdc77d',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n      };\r\n      const configPAINT = {\r\n            percent: returnValue(60) / dataTarget.targetPAINT,\r\n            //  shape: 'rect',\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#eb1e5d',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#eb1e5d',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n\r\n      };\r\n      const configPBS = {\r\n            percent: amountPBS / dataTarget.targetPBS,\r\n            outline: {\r\n                  border: 4,\r\n                  distance: 8,\r\n                  style: {\r\n                        stroke: '#FAAD14',\r\n                        strokeOpacity: 0.65,\r\n                  },\r\n            },\r\n            theme: {\r\n                  styleSheet: {\r\n                        brandColor: '#FAAD14',\r\n                  },\r\n            },\r\n            wave: {\r\n                  length: 128,\r\n            },\r\n\r\n      };\r\n      return (\r\n            <div className=\"child-board quantity\">\r\n                  <div className=\"titleBoard\">PRODUCTION INFORMATION BOARD</div>\r\n                  <div className=\"content\">\r\n                        <div className=\"col name pted\">\r\n                              <div className=\"title title-column\"><BookmarkBorderIcon style={{ marginRight: 10 }} /> PT/ED</div>\r\n                              <div className=\"data-product\">\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{` ${dataTarget.targetPTED}`} </p><p><pre>  </pre> </p><p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{` ${returnValue(20)}`}</p>\r\n                                          {/* {`TARGET: ${dataTarget.targetPTED}  -  ACTUAL: ${returnValue(20)}`} */}\r\n                                    </div>\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\" >\r\n                                    <Liquid\r\n                                          {...configPTED}\r\n                                          statistic={{\r\n                                                content: {\r\n                                                      formatter({ percent }) {\r\n                                                            return Math.round(percent * 100) + \"%\";\r\n                                                      },\r\n                                                },\r\n                                          }} />\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"col target pvc\">\r\n                              <div className=\"title title-column\"><VideoStableIcon style={{ marginRight: 10 }} />PVC</div>\r\n                              <div className=\"data-product\">\r\n\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{`${dataTarget.targetPVC}`} </p><p><pre>  </pre> </p><p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{`${returnValue(50)}`}</p>\r\n                                          {/* {`TARGET: ${dataTarget.targetPVC}  -  ACTUAL: ${returnValue(50)}`} */}\r\n                                    </div>\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\"  >\r\n                                    <Liquid\r\n                                          {...configPVC}\r\n                                          statistic={{\r\n                                                content: {\r\n                                                      formatter({ percent }) {\r\n                                                            return Math.round(percent * 100) + \"%\";\r\n                                                      },\r\n                                                },\r\n\r\n                                          }}\r\n                                    />\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"col actual paint\">\r\n                              <div className=\"title title-column\"><OpacityIcon style={{ marginRight: 10 }} />PAINT</div>\r\n                              <div className=\"data-product\">\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{`${dataTarget.targetPAINT}`}</p> <p><pre>  </pre> </p><p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{`${returnValue(60)}`}</p>\r\n                                          {/* {`TARGET: ${dataTarget.targetPAINT}  -  ACTUAL: ${returnValue(60)}`} */}\r\n                                    </div>\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\">\r\n                                    <Liquid {...configPAINT} statistic={{\r\n                                          content: {\r\n                                                formatter({ percent }) {\r\n                                                      return Math.round(percent * 100) + \"%\";\r\n                                                },\r\n                                          },\r\n                                    }} />\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"col actual pbs\">\r\n                              <div className=\"title title-column\"><DoneAllIcon style={{ marginRight: 10 }} />IN PBS</div>\r\n                              <div className=\"data-product\">\r\n                                    <div className=\"infoValue\">\r\n                                          <p className=\"index target\">TARGET: </p><p className=\"value-target\">{`${dataTarget.targetPBS}`} </p><p><pre>  </pre> </p> <p className=\"index actual\">ACTUAL: </p><p className=\"value-actual\">{`${amountPBS}`}</p>\r\n\r\n                                    </div>\r\n                                    {/* {`TARGET: ${dataTarget.targetPBS}  -  ACTUAL: ${returnValue(90)}`} */}\r\n                              </div>\r\n                              <div className=\"chartProductionDashboard\">\r\n                                    <Liquid {...configPBS} statistic={{\r\n                                          content: {\r\n                                                formatter({ percent }) {\r\n                                                      return Math.round(percent * 100) + \"%\";\r\n                                                },\r\n                                          },\r\n                                    }} />\r\n                              </div>\r\n                        </div>\r\n                  </div>\r\n\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default InformationProduct\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Column } from \"@ant-design/plots\";\r\nimport \"../styles/TimeDown.css\";\r\nimport axios from \"axios\";\r\nimport { useForkRef } from \"@mui/material\";\r\nfunction TimeDown(props) {\r\n    \r\n    const [data, setData] = useState([]);\r\n    const host = \"http://113.174.246.52:7798\";\r\n    \r\n\r\n    useEffect(() => {\r\n        getData();\r\n        const runTimer =  setInterval(() => {\r\n            getData();\r\n        }, 5*60*1000);\r\n        return ()=> clearInterval(runTimer)\r\n    }, []);\r\n    const station = {\r\n        timeDownQC1K1: \"Time Down QC1K 1\",\r\n        timeDownQC1K2: \"Time Down QC1K 2\",\r\n    };\r\n    const getData = () => {\r\n        let time = new Date();\r\n\r\n        axios.post(`${host}/api/getDataTimeDown`, { time }).then((res) => {\r\n             if(res.data.length>0){\r\n                let data = res.data\r\n                let configdata = [];\r\n                // let numDays = new Date(new Date().getDate(), new Date().getMonth() + 1, 0).getDate()\r\n                let numDays = new Date().getDate();\r\n                if (numDays < 15) numDays = 15;\r\n        \r\n                for (let i = 1; i <= numDays; i++) {\r\n                    let dataDraw = data.filter(\r\n                        (val) =>\r\n                            val.name.substring(0, 8) === \"timeDown\" &&\r\n                            new Date(val.timeStamp).getDate() === i\r\n                    );\r\n                    if (dataDraw.length > 0) {\r\n                        dataDraw.map((value) => {\r\n                            configdata.push({\r\n                                name: station[value.name],\r\n                                amount: parseInt((value.amount / 60).toFixed(0)),\r\n                                timeStamp: `${i}`,\r\n                            });\r\n                        });\r\n                    } else {\r\n                        configdata.push(\r\n                            {\r\n                                name: \"Time Down QC1K 1\",\r\n                                amount: 0,\r\n                                timeStamp: `${i}`,\r\n                            },\r\n                            {\r\n                                name: \"Time Down QC1K 2\",\r\n                                amount: 0,\r\n                                timeStamp: `${i}`,\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n                setData(configdata);\r\n             }\r\n              \r\n        });\r\n       \r\n    };\r\n    const config = {\r\n        data,\r\n        xField: \"timeStamp\",\r\n        yField: \"amount\",\r\n        seriesField: \"name\",\r\n        isGroup: true,\r\n        columnStyle: {\r\n            radius: [20, 20, 0, 0],\r\n        },\r\n\r\n        xAxis: {\r\n            title: {\r\n                text: \"DAY (IN CURRENT MONTH)\",\r\n                style: {\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                },\r\n            },\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: \"Minute\",\r\n                style: {\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                },\r\n            },\r\n        },\r\n        label: {\r\n            formatter: (val) => (val.amount !== 0 ? val.amount : \"\"),\r\n            style: {\r\n                fontSize: 16,\r\n            },\r\n            offset: \"-50%\",\r\n\r\n            position: \"top\",\r\n            layout: [\r\n                {\r\n                    type: \"interval-adjust-position\",\r\n                },\r\n                {\r\n                    // type: 'interval-hide-overlap',\r\n                },\r\n                {\r\n                    type: \"adjust-color\",\r\n                },\r\n            ],\r\n        },\r\n        legend: {\r\n            itemName: {\r\n                style: {\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                },\r\n            },\r\n        },\r\n    };\r\n    return (\r\n        <div className=\"child-board timeDown\">\r\n            <div className=\"title-timedown\">TIME DOWN</div>\r\n            <div className=\"dpu-timedown\">\r\n                <Column {...config} className=\"chartTimeDown\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeDown;\r\n\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../styles/ChartFTT.css\";\r\nimport { Column } from \"@ant-design/plots\";\r\nimport socketIoClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nfunction ChartFTT(props) {\r\n    const [data, setData] = useState([]);\r\n    const [objectSocket, setObjectSocket] = useState([]);\r\n    const socketRef = useRef();\r\n    const host = \"http://113.174.246.52:7798\";\r\n    useEffect(() => {\r\n        getObjectSocket();\r\n        getData();\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        socketRef.current = socketIoClient.connect(host);\r\n        objectSocket.map((val) => {\r\n            socketRef.current.on(val.name, () => {\r\n                if (val.name === \"straightaway\" || val.name === \"toRepair\") {\r\n                    getData();\r\n\r\n                }\r\n            });\r\n        });\r\n    }, [props.socket.socketFTT]);\r\n    const getData = () => {\r\n        axios.post(`${host}/api/getFTT`).then((res) => {\r\n            let array = res.data;\r\n\r\n            let numDays = new Date().getDate();\r\n            if (numDays < 15) numDays = 15;\r\n            for (let i = 1; i <= numDays; i++) {\r\n                let straightaway = array.filter(\r\n                    (val) =>\r\n                        val.name === \"straightaway\" &&\r\n                        new Date(val.timeStamp).getDate() === i\r\n                );\r\n\r\n                let toRepair = array.filter(\r\n                    (val) =>\r\n                        val.name === \"toRepair\" && new Date(val.timeStamp).getDate() === i\r\n                );\r\n\r\n                data.push(\r\n                    {\r\n                        name: \"Body OK\",\r\n                        amount: straightaway.length > 0 ? straightaway[0].amount : 0,\r\n                        timeStamp: `${i}`,\r\n                    },\r\n                    {\r\n                        name: \"Body need Repair\",\r\n                        amount: toRepair.length > 0 ? toRepair[0].amount : 0,\r\n                        timeStamp: `${i}`,\r\n                    }\r\n                );\r\n            }\r\n\r\n            setData(data);\r\n        });\r\n    };\r\n    const getObjectSocket = () => {\r\n        axios\r\n            .post(\"http://113.174.246.52:7798/api/returnObjectSocket\")\r\n            .then((res) => {\r\n                res.data.push({ name: \"targetProduction\" });\r\n                setObjectSocket(res.data);\r\n            });\r\n    };\r\n    const config = {\r\n        data,\r\n        xField: \"timeStamp\",\r\n        yField: \"amount\",\r\n        seriesField: \"name\",\r\n        isPercent: true,\r\n        isStack: true,\r\n        xAxis: {},\r\n\r\n        label: {\r\n            position: \"middle\",\r\n            content: (val) => {\r\n                return val.amount !== 0 ? val.amount.toFixed(2) * 100 + \"%\" : \"\";\r\n            },\r\n            style: {\r\n                fill: \"#fff\",\r\n                fontSize: 12,\r\n                color: \"black\",\r\n            },\r\n            layout: [\r\n                {\r\n                    type: \"hide-overlap\",\r\n                },\r\n            ],\r\n        },\r\n        xAxis: {\r\n            label: {\r\n                style: {\r\n                    fontSize: 15,\r\n                },\r\n            },\r\n            title: {\r\n                text: \"DAY (IN CURRENT MONTH)\",\r\n                style: {\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                },\r\n            },\r\n        },\r\n        yAxis: {\r\n            label: {\r\n                style: {\r\n                    fontSize: 15,\r\n                },\r\n            },\r\n            title: {\r\n                text: \"PERCENT\",\r\n                style: {\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                },\r\n            },\r\n        },\r\n        legend: {\r\n            position: \"top-left\",\r\n            itemName: {\r\n                style: {\r\n                    fontSize: 18,\r\n                    fontWeight: \"bold\",\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"child-board FTT\">\r\n            <div className=\"title-FTT-Chart\">FTT</div>\r\n            <div className=\"dpu-FTT\">\r\n                <Column {...config} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartFTT;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Dashboard.css\";\r\nimport sockettIOClient from \"socket.io-client\";\r\nimport {\r\n      FloatButton,\r\n      Drawer,\r\n      Divider,\r\n      Form,\r\n      Button,\r\n      notification,\r\n      InputNumber,\r\n} from \"antd\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\nimport ChartDPU from \"./ChartDPU\";\r\nimport InformationProduct from \"./InformationProduct\";\r\nimport TimeDown from \"./TimeDown\";\r\nimport ChartFTT from \"./ChartFTT\";\r\n\r\n\r\nfunction Dashboard() {\r\n      const [dataLineProduct, setDataLineProduct] = useState([]);\r\n      const [dataDPU, setDataDPU] = useState([]);\r\n      const [dataDPUNoDirt, setDataDPUNoDirt] = useState([])\r\n     \r\n      // const [dataFTT, setDataFTT] = useState([])\r\n      const [objectSocket, setObjectSocket] = useState([]);\r\n      const socketRef = React.useRef();\r\n      const host = \"http://113.174.246.52:7798\";\r\n      const hostMysql = \"http://113.174.246.52:3005\";\r\n      const [openDraw, setOpenDraw] = useState(false);\r\n      const [form] = Form.useForm();\r\n      /// set type notification antd\r\n      const [api, contextHolder] = notification.useNotification();\r\n      // set ref for button out side form antd\r\n      const formRef = useRef();\r\n      const [socketFTT, setSocketFTT] = useState('')\r\n      const [dataTarget, setDataTarget] = useState({\r\n            pted: 0,\r\n            pvc: 0,\r\n            paint: 0,\r\n            pbs: 0,\r\n      });\r\n\r\n      //notification antd  with type: success, info, warning, error\r\n      const openNotificationWithIcon = (type, content) => {\r\n            api[type]({\r\n                  message: \"Notification \",\r\n                  description: content,\r\n                  duration: 0,\r\n            });\r\n      };\r\n\r\n      useEffect(() => {\r\n            getData();\r\n            getObjectSocket();\r\n            getDataDPU();\r\n            // getDataTimDown();\r\n      }, []);\r\n      //get Info from server by socket\r\n      useEffect(() => {\r\n            socketRef.current = sockettIOClient.connect(host);\r\n            // socketRef.current.on(\"connect\", () => {});\r\n            socketRef.current.on(\"connect\", () => {\r\n\r\n            });\r\n            objectSocket.map((val) => {\r\n                  socketRef.current.on(val.name, (dataGot) => {\r\n                        console.log(val)\r\n                        if (\r\n                              val.name === \"inPTED\" ||\r\n                              val.name === \"amountPTED\" ||\r\n                              val.name === \"amountPaint\" ||\r\n                              val.name === \"amountPBS\" ||\r\n                              val.name === \"targetProduction\"\r\n                        ) {\r\n                              if (val.name === \"targetProduction\") getDataTargetProduction();\r\n                              if (val.name === \"amountPBS\") getDataDPU();\r\n                              getData();\r\n                        }\r\n\r\n                        if (val.name === \"timeDownQC1K2\" || val.name === \"timeDownQC1K1\")\r\n                              console.log(val.name)\r\n                        if (val.name === 'straightaway' || val.name === 'toRepair')\r\n                              setSocketFTT(val.name)\r\n                  });\r\n            });\r\n      }, [objectSocket]);\r\n\r\n      const getObjectSocket = () => {\r\n            axios\r\n                  .post(\"http://113.174.246.52:7798/api/returnObjectSocket\")\r\n                  .then((res) => {\r\n                        res.data.push({ name: \"targetProduction\" });\r\n                        setObjectSocket(res.data);\r\n                  });\r\n      };\r\n\r\n      React.useEffect(() => {\r\n            if (dataTarget.length !== 0) {\r\n                  let objectValue = {\r\n                        targetPTED: dataTarget.targetPTED,\r\n                        targetPVC: dataTarget.targetPVC,\r\n                        targetPAINT: dataTarget.targetPAINT,\r\n                        targetPBS: dataTarget.targetPBS,\r\n                        targetDPU: dataTarget.targetDPU,\r\n                  };\r\n                  form.setFieldsValue(objectValue);\r\n            }\r\n      }, [dataTarget]);\r\n\r\n      const getData = async () => {\r\n            /// get Production form each Line in RFID Paint Shop\r\n            const getTimeNow = new Date();\r\n            axios\r\n                  .post(`${host}/api/returnLineProduct`, { getTimeNow })\r\n                  .then((res) => {\r\n                        let newArray = res.data.reduce((acc, curr) => {\r\n                              let found = acc.find((item) => item.PROCESS_NO === curr.PROCESS_NO);\r\n                              if (found) {\r\n                                    found.COUNT++;\r\n                              } else {\r\n                                    acc.push({ PROCESS_NO: curr.PROCESS_NO, COUNT: 1 });\r\n                              }\r\n                              return acc;\r\n                        }, []);\r\n                        setDataLineProduct(newArray);\r\n                        getDataTargetProduction();\r\n                  })\r\n                  .catch((error) => {\r\n                        openNotificationWithIcon(\"warning\", error.toJSON().message);\r\n                  });\r\n      };\r\n\r\n      //chat gpt\r\n      const getDataDPU = async () => {\r\n            try {\r\n                  const time = new Date();\r\n                  const response1 = await axios.post(`${host}/api/returnListVinDay`, {\r\n                        time,\r\n                  });\r\n                  const data = response1.data;\r\n                  const response2 = await axios.post(`${hostMysql}/api/getDataErrorCar`, {\r\n                        data,\r\n                  });\r\n                  const listCarError = response2.data;\r\n\r\n                  const dpuNoDirt = await axios.post(`${hostMysql}/api/getDataErrorNoDirt`, { data })\r\n                  const listCarErrorNoDirt = dpuNoDirt.data\r\n                  const newArray = [];\r\n                  const newArrayNoDirt = []\r\n                  const vinCodes = [];\r\n                  const vinCodesNoDirt = []\r\n                  for (let item of data) {\r\n                        if (!vinCodes.includes(item.VIN_CODE)) {\r\n                              const errorItem = listCarError.find(\r\n                                    (error) => error.error_code === item.VIN_CODE\r\n                              );\r\n                              if (errorItem) {\r\n                                    item.error_type = errorItem.error_type;\r\n                                    item.error_type_count = errorItem.error_type_count;\r\n                                    newArray.push(item);\r\n                                    vinCodes.push(item.VIN_CODE);\r\n                              }\r\n                        }\r\n                  }\r\n                  for (let item of data) {\r\n                        if (!vinCodesNoDirt.includes(item.VIN_CODE)) {\r\n                              const errorItem = listCarErrorNoDirt.find(\r\n                                    (error) => error.error_code === item.VIN_CODE\r\n                              );\r\n                              if (errorItem) {\r\n                                    item.error_type = errorItem.error_type;\r\n                                    item.error_type_count = errorItem.error_type_count;\r\n                                    newArrayNoDirt.push(item);\r\n                                    vinCodesNoDirt.push(item.VIN_CODE);\r\n                              }\r\n                        }\r\n                  }\r\n                  setDataDPU(newArray);\r\n                  //setDataDPUNoDirt(newArrayNoDirt)\r\n            } catch (error) {\r\n\r\n            }\r\n      };\r\n\r\n      /// return value of target production\r\n      const getDataTargetProduction = async () => {\r\n            axios.post(`${host}/api/getDataTargetProduction`).then((res) => {\r\n                  if (res.data !== \"null\") {\r\n                        const result = res.data.reduce((acc, curr) => {\r\n                              acc[curr.name] = curr.amount;\r\n                              return acc;\r\n                        }, {});\r\n                        setDataTarget(result);\r\n                  }\r\n            });\r\n      };\r\n  \r\n      /// function Form antd\r\n      const onFinish = (values) => {\r\n            try {\r\n                  axios\r\n                        .post(`${host}/api/saveTargetValue`, { values })\r\n                        .then((res) => {\r\n                              if (res.data === \"ok\")\r\n                                    openNotificationWithIcon(\"success\", \"Save data successfully\");\r\n                              else openNotificationWithIcon(\"error\", \"Data save failed\");\r\n                              socketRef.current = sockettIOClient.connect(host);\r\n                              socketRef.current.emit(\"targetProduction\");\r\n                              getData();\r\n                        })\r\n                        .catch((error) => {\r\n                              openNotificationWithIcon(\"warning\", error.toJSON().message);\r\n                        });\r\n            } catch (error) {\r\n                  openNotificationWithIcon(\"error\", error.toJSON().message);\r\n            }\r\n      };\r\n      const onFinishFailed = (errorInfo) => {\r\n\r\n      };\r\n      const handleSubmit = () => {\r\n            formRef.current.submit();\r\n      };\r\n      return (\r\n            <div className=\"container\">\r\n                  {contextHolder}\r\n                  <div className=\"board\">\r\n                        <InformationProduct value={{ dataTarget, dataLineProduct }} />\r\n                  </div>\r\n                  <div className=\"board\">\r\n                        <ChartDPU value={{ dataDPU, dataTarget, dataDPUNoDirt }} />\r\n                  </div>\r\n                  <div className=\"board\">\r\n                        <TimeDown  />\r\n                  </div>\r\n                  <div className=\"board \">\r\n                        <ChartFTT socket={{ socketFTT }} />\r\n                  </div>\r\n                  <FloatButton\r\n                        icon={<SettingOutlined />}\r\n                        style={{ bottom: 10, right: 10 }}\r\n                        onClick={() => setOpenDraw(true)}\r\n                  />\r\n                  <Drawer\r\n                        title=\"Configure display information\"\r\n                        placement=\"right\"\r\n                        onClose={() => setOpenDraw(false)}\r\n                        open={openDraw}\r\n                        width={400}\r\n                        className=\"drawer\"\r\n                  >\r\n                        <div className=\"submitForm\">\r\n                              <Button type=\"primary\" htmlFor=\"config\" onClick={handleSubmit}>\r\n                                    Submit\r\n                              </Button>\r\n                        </div>\r\n                        <Divider className=\"divider\" orientation=\"left\">\r\n                              Production Target\r\n                        </Divider>\r\n\r\n                        <div className=\"production\">\r\n                              <Form\r\n                                    name=\"config\"\r\n                                    ref={formRef}\r\n                                    id=\"config\"\r\n                                    form={form}\r\n                                    labelCol={{\r\n                                          span: 8,\r\n                                    }}\r\n                                    wrapperCol={{\r\n                                          span: 16,\r\n                                    }}\r\n                                    style={{\r\n                                          maxWidth: 600,\r\n                                    }}\r\n                                    initialValues={{\r\n                                          remember: true,\r\n                                    }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                    autoComplete=\"off\"\r\n                              >\r\n                                    <Form.Item\r\n                                          label=\"Target PT/ED\"\r\n                                          name=\"targetPTED\"\r\n                                          defaultValue=\"2321\"\r\n                                          rules={[\r\n                                                {\r\n                                                      required: true,\r\n                                                      message: \"Please! Input number of production target\",\r\n                                                },\r\n                                          ]}\r\n                                    >\r\n                                          <InputNumber style={{ width: 100 }} />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                          label=\"Target PVC\"\r\n                                          name=\"targetPVC\"\r\n                                          rules={[\r\n                                                {\r\n                                                      required: true,\r\n                                                      message: \"Please! Input number of production target\",\r\n                                                },\r\n                                          ]}\r\n                                    >\r\n                                          <InputNumber style={{ width: 100 }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                          label=\"Target PAINT\"\r\n                                          name=\"targetPAINT\"\r\n                                          rules={[\r\n                                                {\r\n                                                      required: true,\r\n                                                      message: \"Please! Input number of production target\",\r\n                                                },\r\n                                          ]}\r\n                                    >\r\n                                          <InputNumber style={{ width: 100 }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                          label=\"Target PBS\"\r\n                                          name=\"targetPBS\"\r\n                                          rules={[\r\n                                                {\r\n                                                      required: true,\r\n                                                      message: \"Please! Input number of production target\",\r\n                                                },\r\n                                          ]}\r\n                                    >\r\n                                          <InputNumber style={{ width: 100 }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                          label=\"Target DPU\"\r\n                                          name=\"targetDPU\"\r\n                                          rules={[\r\n                                                {\r\n                                                      required: true,\r\n                                                      message: \"Please! Input number of DPU target\",\r\n                                                },\r\n                                          ]}\r\n                                    >\r\n                                          <InputNumber style={{ width: 100 }} />\r\n                                    </Form.Item>\r\n                              </Form>\r\n                        </div>\r\n                  </Drawer>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n\r\n  <Dashboard />\r\n);\r\n"],"sourceRoot":""}